{
    "docs": [
        {
            "location": "/index.html", 
            "text": "Overview\n\n\nIntegration Server Continuous Code Review (ISCCR) has been developed by Software AG Global Consulting Services, and is provided through subscription license as a PERFORMANCE.READY tool.  It's aim is to provide quality check processing for Integration Server developments, both as part of a continuous integration and local development approach with Integration Server.  It checks and enables a development team to improve quality of your Integration Server services thereby assisting with readability, quality, standardizaton and ultimately minimising cost of change and reduces the maintenance burden.\n\n\nThis tool has a large number of customisable review points covering:\n\n\n\n\nQuality issues\n\n\nCommon Mistakes\n\n\nCoding standards \n\n\nDeprecated services \n\n\n\n\nplus many other service properties and coding issues.\n\n\nCompatibility\n\n\nIntegration Server Continuous Code review is tested and compatible with the following releases of Integration Server:\n\n\n\n\nwebMethods v10.1\n\n\nwebMethods v10.0\n\n\nwebMethods v9.12\n\n\nwebMethods v9.10\n\n\nwebMethods v9.9\n\n\nwebMethods v9.8\n\n\nwebMethods v9.7\n\n\nwebMethods v9.6\n\n\nwebMethods v9.5\n\n\nwebMethods v9.0\n\n\nwebMethods v8.2\n\n\n\n\nInstallation\n\n\nCode Review Engine\n\n\nZip File Extraction\n\n\nThe ISCCR execution engine is distributed as a zip file and can simply be extracted into a location of your choosing (e.g. C:\\SoftwareAG\\tools\\CodeReview within the file system.  The file system within the zip file must be maintained whilst extracting, and will create a file structure similar to:\n\n\n\n\nLicense File\n\n\nFollowing extraction, before execution you\u2019ll need to copy the code review engine licence file, renaming to license.txt into this directory, e.g.\n\n\n\n\nEditing CodeReview.cmd\n\n\nIf you intend to use the sample windows script provided, and in particular if you\u2019re running the code review from within a Continuous Integration tool such as Jenkins, this file will need modifying to including the full path to the location where the tool has been extracted, e.g. assuming you extract the file to:\n\n\nc:\\SoftwareAG\\tools\\ISCCR\n\n\n\nYou'll need to modify the CodeReview.cmd updating the CODEREVIEW_HOME environment variable, replacing the . with the full path to the installation directory i.e, find and replace the command\n\n\nSET CODE_REVIEW_HOME=.\n\n\n\nand change the '.' to your installation directory, e.g.\n\n\nSET CODE_REVIEW_HOME=c:\\SoftwareAG\\tools\\ISCCR\n\n\n\nSetting JAVA_HOME\n\n\nIt's also recommended to set the JAVA_HOME environment variable.  The code review tool in windows will attempt to discover a suitable JVM to execute, however this should ideally be set teo the one distributed within webmethods, e.g.\n\n\n\n\nEclipse Plugin\n\n\nThe eclipse plugin is distributed as a zip file that can de installed into your Software AG designer eclipse environment as follows:\n\n\n\n\nStop any instances of Designer that are currently running\n\n\nBrowse to the designer eclipse dropins folder within the Software AG installation, \n\n\n\n\ne.g.\n\n\nc:\\SoftwareAG\\Designer\\eclipse\\dropins\n\n\n\n\n\nRemove any previous ISCCR directory from the dropins location\n\n\nCreate a directory in the dropins location named:  \nISCCR\n\n\nUnzip the eclipse plugin into the ISCCR directory\n\n\n\n\nThis should create a file system structure as follows \n\n\nC:\\SoftwareAG\\Designer\\eclipse\\dropins\\ISCCRv4\\plugins\\ContinuousCodeReview_Plugin_x.x.x.x.jar\n\n\n\n\n\nStart Designer\n\n\nAfter a few minutes designer will start with the plugin installed\n\n\n\n\n\n\nWarning\n\n\nPlease be patient \u2013 the installation will take a few minutes and designer may look like the process has hung.\n\nDo NOT kill the designer process otherwise the installation will fail and further installations will be blocked without creating a different base directory (not called ISCCR) within the dropins location.*\n\n\n\n\n\n\nOn startup, enter the window/preferences settings as required, e.g:\n\n\n\n\n\n\n\n\nConfigure by pointing to the installation of the code review engine, and to the packages root folder within the designer where the plugin is installed\n\n\nAdditionally, add the prefixes of custom packages that you wish to be reviewed and any JVM Parameters.  When finished press ok\n\n\n\n\nWxISCCR Package\n\n\n\n\nNote\n\n\nThis pacakge only exists to support the older Centralized (Non-Local Development) approach, and is otherwise not needed\n\n\n\n\nThe WxISCCR package is provided as a zip, that can be imported into the Integration Server as any other package, through the install inbound pacakges functionality.\n\n\nQuick Start\n\n\nWindows Command Line Execution\n\n\nSingle Package Review\n\n\nAfter following the installation notes above, ISCCR can be run in windows to review single packages  using the supplied command script by opening a command prompt, navigating to the extracted directory and supplying individual package details.\n\n\nThe format of the command prompt is as follows:\n\n\nCodeReview.cmd\n\n\n-Dcode.review.directory=[LOCATION OF PACKAGES DIRECTORY]\n\n\n-Dcode.review.pkgname=[PACKAGE NAME]\n\n\n-Dcode.review.pkgprefix=[PACKAGE PREFIX LETTERS]\n\n\nExample\n\n\nAssuming a package named \nIotDemo\n\n\nCodeReview.cmd -Dcode.review.directory=c:\\softwareag\\IntegrationServer\\instances\\default\\packages -Dcode.review.pkgname=IotDemo -Dcode.review.pkgprefix=Iot\n\n\n\nThe output of this command for a \u2018Passed test\u2019 with \u2018INFO\u2019 level debug will be similar to:\n\n\nCodeReview.cmd -Dcode.review.directory=c:\\SoftwareAG\\IntegrationServer\\instances\\default\\packages -Dcode.review.pkgname=IotDemo -Dcode.review.pkgprefix=Iot\nLooking for JREv1.8\nC:\\Program Files\\Java\\jre1.8.0_51\nFound Compatible JVM at: C:\\Program Files\\Java\\jre1.8.0_51\nStarting Continuous Code Review Using discovered JVM\n2015-10-18 21:59:28 INFO   webMethods Integration Server Continuous Code Review\n2015-10-18 21:59:28 INFO   Software AG Global Consulting Services\n2015-10-18 21:59:28 INFO   Copyright (C)2015 Software AG.  All rights reserved\n2015-10-18 21:59:28 INFO   Author  : dave.pemberton@softwareag.com\n2015-10-18 21:59:28 INFO   Version : _VERSION_\n2015-10-18 21:59:28 INFO   Build   : _BUILD_\n2015-10-18 21:59:28 INFO   Run Mode: INTERACTIVE\n2015-10-18 21:59:28 INFO   -------------------------------------------------------------------------\n2015-10-18 21:59:28 INFO   Exec Directory   [C:/Development/workspace/FlowCodeChecker/build/dist/lib/GCS_ContinuousCodeReview-Pub.jar]\n2015-10-18 21:59:28 INFO   Loading Default Configuration Options File\n2015-10-18 21:59:28 INFO   Options File     [*******************/config.xml]\n2015-10-18 21:59:29 INFO   Custom Options   [c:\\SoftwareAG\\IntegrationServer\\instances\\default\\packages\\IotDemo\\config\\codereview.xml] exists within package - Loading and merging with settings]\n2015-10-18 21:59:29 INFO   Custom Options   [c:\\SoftwareAG\\IntegrationServer\\instances\\default\\packages\\IotDemo\\config\\codereview.xml] provided. Loading and merging with defaults\n2015-10-18 21:59:29 INFO   Code Directory   [c:\\SoftwareAG\\IntegrationServer\\instances\\default\\packages\\IotDemo\\]\n2015-10-18 21:59:29 INFO   Report Directory []\n2015-10-18 21:59:29 INFO   Package Name     [IotDemo]\n2015-10-18 21:59:29 INFO   ------------------------ LICENCE DETAILS ------------------------\n2015-10-18 21:59:29 INFO   Using License file : **************\\license.txt\n2015-10-18 21:59:29 INFO   Licensed to        : ***********************************\n2015-10-18 21:59:29 INFO   Serial Number:     : ***********************************\n2015-10-18 21:59:29 INFO   License Comments   : ***********************************\n2015-10-18 21:59:29 INFO   Licence Checked and is valid\n2015-10-18 21:59:30 INFO   EXECUTING OPERATIONS\n2015-10-18 21:59:30 INFO   -----------------------------------------------------------\n2015-10-18 21:59:30 INFO   Rule Id        [SP1]\n2015-10-18 21:59:30 INFO   Rule Index     [1]\n2015-10-18 21:59:30 INFO   Name           [Stateless]\n2015-10-18 21:59:30 INFO   Description    [Services should be stateless to avoid creating session state where not needed. Each session consumes resources on the IS, consumes memory, creates a database entry, and in a clustered environment needs\nto be synchronized between cluster nodes. To minimize the build-up of unnecessary sessions it is recommended to ensure stateless services are used where possible.  This can be changed on the 'stateless' flow property within Designer by setting the value to yes.\nThe table below highlights all services in the package which are currently configured as stateless]\n2015-10-18 21:59:30 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.ServiceProperties]\n2015-10-18 21:59:30 INFO   Ignore Failure [false]\n2015-10-18 21:59:30 INFO   -----------------------------------------------------------\n2015-10-18 21:59:30 INFO   Rule Id        [SP2]\n2015-10-18 21:59:30 INFO   Rule Index     [2]\n2015-10-18 21:59:30 INFO   Name           [Pipeline Save Restore]\n2015-10-18 21:59:30 INFO   Description    [No Save/Restore Pipeline options should be set against the service.  The Save/Restore pipeline options where set can result in unnecessary IO and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised.  It is recommended to remote these options from the services before deployment to a non-development environment, or use the extended property (watt.server.pipeline.processor) to disable these in the non-development environments.  Where this is the case, this rule can be ignored]\n2015-10-18 21:59:30 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.ServiceProperties]\n2015-10-18 21:59:30 INFO   Ignore Failure [false]\n2015-10-18 21:59:30 INFO   -----------------------------------------------------------\n2015-10-18 21:59:30 INFO   Rule Id        [FQ1]\n2015-10-18 21:59:30 INFO   Rule Index     [3]\n2015-10-18 21:59:30 INFO   Name           [Pipeline Services]\n2015-10-18 21:59:30 INFO   Description    [No Save/Restore/Trace Pipieline services should exist within the flow service.  Save/Restore pipeline services result in unnecessary IO and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised.  It is recommended to delete these from the services before deployment to a non-development environment to ensure maximum performance.  Alternative to this is to use the pipeline service options from within designer and disable these in the non-development environments as described in the previous check.]\n2015-10-18 21:59:30 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:30 INFO   Ignore Failure [false]\n2015-10-18 21:59:30 INFO   -----------------------------------------------------------\n2015-10-18 21:59:30 INFO   Rule Id        [FQ2]\n2015-10-18 21:59:30 INFO   Rule Index     [4]\n2015-10-18 21:59:30 INFO   Name           [Clear Pipeline]\n2015-10-18 21:59:30 INFO   Description    [The ClearPipeline service should not be used as pipeline variables should be dropped immediately as soon as they are no longer required.  ClearPipeline leads to unnecessary overhead at the pipeline is walked to determine whether to preserve or drop variables, and can have significant impact on performance when a large pipeline is present.  It is recommended to delete these services from the flow and drop variables once they are no longer needed.]\n2015-10-18 21:59:30 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:30 INFO   Ignore Failure [false]\n2015-10-18 21:59:30 INFO   -----------------------------------------------------------\n2015-10-18 21:59:30 INFO   Rule Id        [FQ3]\n2015-10-18 21:59:30 INFO   Rule Index     [5]\n2015-10-18 21:59:30 INFO   Name           [Deprecated Services]\n2015-10-18 21:59:30 INFO   Description    [Use of deprecated services is not recommended as these will be dropped from the product in a future release.  Please refer to the built-in-services-guide for replacements to any deprecated services discovered to be in use and modify the flow to remove the deprecated service and update with the recommended alternative.]\n2015-10-18 21:59:30 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:30 INFO   Ignore Failure [false]\n2015-10-18 21:59:32 INFO   -----------------------------------------------------------\n2015-10-18 21:59:32 INFO   Rule Id        [FQ4]\n2015-10-18 21:59:32 INFO   Rule Index     [6]\n2015-10-18 21:59:32 INFO   Name           [Disabled Services]\n2015-10-18 21:59:32 INFO   Description    [services should be removed to avoid performance issues as the flow is interpreted during execution.  This also results in smaller, more maintainable flow services which result in a better understanding and lower cost of maintenance.  Recommendation is to delete rather than disable any code no longer needed.]\n2015-10-18 21:59:32 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:32 INFO   Ignore Failure [false]\n2015-10-18 21:59:32 INFO   -----------------------------------------------------------\n2015-10-18 21:59:32 INFO   Rule Id        [FQ5]\n2015-10-18 21:59:32 INFO   Rule Index     [7]\n2015-10-18 21:59:32 INFO   Name           [Use of Pub.Storage]\n2015-10-18 21:59:32 INFO   Description    [pub.storage services should not be used due to performance issues.  The pub.storage services have an implicit locking model and are not intended to be a high performance all-purpose database.  Where pub.storage services have been used, it is recommended to re-architect these, particularly in high-throughput scenarios.]\n2015-10-18 21:59:32 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:32 INFO   Ignore Failure [false]\n2015-10-18 21:59:32 INFO   -----------------------------------------------------------\n2015-10-18 21:59:32 INFO   Rule Id        [FQ6]\n2015-10-18 21:59:32 INFO   Rule Index     [8]\n2015-10-18 21:59:32 INFO   Name           [Debug Log]\n2015-10-18 21:59:32 INFO   Description    [Debug Log services should be removed to avoid performance issues during execution.  Where logging is required, the recommendation is to implement a more general purpose and configurable logging framework to help keep you logs more manageable and separate from product logging]\n2015-10-18 21:59:32 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:32 INFO   Ignore Failure [false]\n2015-10-18 21:59:32 INFO   -----------------------------------------------------------\n2015-10-18 21:59:32 INFO   Rule Id        [FQ7]\n2015-10-18 21:59:32 INFO   Rule Index     [9]\n2015-10-18 21:59:32 INFO   Name           [Public Services Try/Catch]\n2015-10-18 21:59:32 INFO   Description    [Public services must have a try catch within them to ensure graceful handling of error conditions when these occur.  Public services (or top level services) need to decide how to retry or return the error condition to the consuming application.  Recommendation is to use Sequence nodes to wrap the execution of the public service within a try/catch block and use the catch to handle the error condition.  Try/catch can be achieved with sequence nodes by having a top level sequence with the exit on value set to \nSUCCESS\n and 2 inner sequences, the try, with the exit on value set to \nFAILURE\n and the catch, with the exit on value set to \nDONE\n.  It is also recommended to add comments to these sequences to aid understanding so that a developer can identify these are for try/catch usage. ]\n2015-10-18 21:59:32 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FilteredFlowXMLXpathChecker]\n2015-10-18 21:59:32 INFO   Ignore Failure [false]\n2015-10-18 21:59:32 INFO   -----------------------------------------------------------\n2015-10-18 21:59:32 INFO   Rule Id        [FQ8]\n2015-10-18 21:59:32 INFO   Rule Index     [10]\n2015-10-18 21:59:32 INFO   Name           [Connections Package]\n2015-10-18 21:59:32 INFO   Description    [All JDBC Adapter connections should be in separate packages, that is a package should not contain connections mixed in with other assets.  This aids deployment of services as this means changes to packages can be deployed without unnecessarily affecting the JDBC Adapter database connections.  Recommendation is to have adapter connections in packages on their own, and not mix these types.]\n2015-10-18 21:59:32 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.ConnectionsChecker]\n2015-10-18 21:59:32 INFO   Ignore Failure [false]\n2015-10-18 21:59:32 INFO   -----------------------------------------------------------\n2015-10-18 21:59:32 INFO   Rule Id        [FQ9]\n2015-10-18 21:59:32 INFO   Rule Index     [11]\n2015-10-18 21:59:32 INFO   Name           [FTP Timeout]\n2015-10-18 21:59:32 INFO   Description    [Ensure timeout is specified on FTP services.  If no timeout is specified on FTP services, the default timeout value is unlimited, meaning there is a possibility of consuming threads on the Integration Server for a long period of time, especially in the scenario where the FTP server isn't available.  Recommendation is to add a timeout value to the invocation where these services are used.]\n2015-10-18 21:59:32 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:32 INFO   Ignore Failure [false]\n2015-10-18 21:59:32 INFO   -----------------------------------------------------------\n2015-10-18 21:59:32 INFO   Rule Id        [FQ10]\n2015-10-18 21:59:32 INFO   Rule Index     [12]\n2015-10-18 21:59:32 INFO   Name           [Service invoke comments]\n2015-10-18 21:59:32 INFO   Description    [Comments should be provided for each service that is invoked from the main service.  This helps to improve code readability and maintainability to help reduce cost of change.  Every service invoke should have a comment value set.]\n2015-10-18 21:59:32 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:32 INFO   Ignore Failure [true]\n2015-10-18 21:59:32 INFO   -----------------------------------------------------------\n2015-10-18 21:59:32 INFO   Rule Id        [FQ11]\n2015-10-18 21:59:32 INFO   Rule Index     [13]\n2015-10-18 21:59:32 INFO   Name           [Sequence comments]\n2015-10-18 21:59:32 INFO   Description    [Comments should be provided for each sequence node that is used.  This helps to improve code readability and maintainability to help reduce cost of change.  Every sequence node should have a comment value set.]\n2015-10-18 21:59:32 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:32 INFO   Ignore Failure [true]\n2015-10-18 21:59:32 INFO   -----------------------------------------------------------\n2015-10-18 21:59:32 INFO   Rule Id        [FQ12]\n2015-10-18 21:59:32 INFO   Rule Index     [14]\n2015-10-18 21:59:32 INFO   Name           [Unauthorised Access/Orphaned]\n2015-10-18 21:59:32 INFO   Description    [All services within this package should be invoked through a public service.  This rule Identifies any assets within the package that are not used directly or indirectly from a public flow service or DSP file contained within this package, and therefore are either not used, or are called from outside the package breaking the public/private access principle.]\n2015-10-18 21:59:32 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.OrphanedChecker]\n2015-10-18 21:59:32 INFO   Ignore Failure [true]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [FQ13]\n2015-10-18 21:59:33 INFO   Rule Index     [15]\n2015-10-18 21:59:33 INFO   Name           [Branch without switch or evaluate labels]\n2015-10-18 21:59:33 INFO   Description    [The BRANCH step selects and executes a child step based on the value of one or more variables in the pipeline. You indicate the variables you want to branch on by specifying a switch value or by writing an expression that includes the variables, therefore a branch must have either a switch value or have evaluate labels set to true.]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [FQ14]\n2015-10-18 21:59:33 INFO   Rule Index     [16]\n2015-10-18 21:59:33 INFO   Name           [Branch on expression when child step is without specified label or $null]\n2015-10-18 21:59:33 INFO   Description    [If you branch on expressions (Evaluate labels is set to True), you cannot branch on null or empty values. When executing the BRANCH step and evaluating labels, Integration Server ignores target steps with a blank or set to $null label.]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [FQ15]\n2015-10-18 21:59:33 INFO   Rule Index     [17]\n2015-10-18 21:59:33 INFO   Name           [Exit Node From Specification]\n2015-10-18 21:59:33 INFO   Description    [The EXIT step exits the entire flow service or a single flow step. Specifically, it may exit from the nearest ancestor loop step, a specified ancestor step, the parent step, or the entire flow service.  An exit 'From' value is required to determine where to exit from]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS1]\n2015-10-18 21:59:33 INFO   Rule Index     [18]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Root Folder ]\n2015-10-18 21:59:33 INFO   Description    [Root Folder should not be the same as the package as this can cause namespace issues should the code need to be refactored or moved to other packages for promotion to common services, inhibiting reusability.  Recommendation is to set a separate prefix folder structure from the package and use this across all packages differentiating below the prefix.  This can be one or two levels deep (but ideally should be no more) and commonly is the inverse domain name of the organisation, e.g. \ncom.softwareag\n]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS2]\n2015-10-18 21:59:33 INFO   Rule Index     [19]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Folder ]\n2015-10-18 21:59:33 INFO   Description    [Folders should only contain lower case ascii characters and digits.  In certain scenarios, use of the underscore character '_' is allowed but should be avoided where possible.]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS3]\n2015-10-18 21:59:33 INFO   Rule Index     [20]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Folder Prefix]\n2015-10-18 21:59:33 INFO   Description    [Ensure that all assets exist within the specified prefix folders.  Recommendation is to set a separate prefix folder structure from the package and use this across all packages differentiating below the prefix.  This can be one or two levels deep (but ideally should be no more) and commonly is the inverse domain name of the organisation, e.g. \ncom.softwareag\n.]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS4]\n2015-10-18 21:59:33 INFO   Rule Index     [21]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Package]\n2015-10-18 21:59:33 INFO   Description    [Ensure the package prefix has been specified and package name conforms to standards.  \nbr/\n1. The package name should not end with the word \nPackage\n or \nPkg\n.  \nbr/\n2. Package names must not be prefixed with \nWm\n. These usually represent packages distributed by webMethods. \nbr/\n3. Packages should start with an uppercase character and only contain alpha numeric character plus the underscore when absolutely required.. \nbr/\n4. Package Name should start with your provided prefix.  A package prefix aids identification of packages created by the organisation.]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS5]\n2015-10-18 21:59:33 INFO   Rule Index     [22]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Services]\n2015-10-18 21:59:33 INFO   Description    [Ensure Services (Flow and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST services)]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS6]\n2015-10-18 21:59:33 INFO   Rule Index     [23]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Documents]\n2015-10-18 21:59:33 INFO   Description    [Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary.\nDocuments generated from XSDs may be named docTypeRef_* and these are catered for in this check.]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS7]\n2015-10-18 21:59:33 INFO   Rule Index     [24]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Schemas]\n2015-10-18 21:59:33 INFO   Description    [Ensure Schemas definitions conform to naming standards.  A schema must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary.]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS8]\n2015-10-18 21:59:33 INFO   Rule Index     [25]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - FlatFiles]\n2015-10-18 21:59:33 INFO   Description    [Ensure Flat File Dictionaries and Schema definitions conform to naming standards.  They must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary.]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS9]\n2015-10-18 21:59:33 INFO   Rule Index     [26]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Blaze]\n2015-10-18 21:59:33 INFO   Description    [Ensure Blaze Rules Conform to the Naming Standards.   Blaze rule service names must only contain alpha numeric characters and the underscore when absolutely necessary.]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS10]\n2015-10-18 21:59:33 INFO   Rule Index     [27]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - XSL]\n2015-10-18 21:59:33 INFO   Description    [Ensure XSL Services Conform to the Naming Standards.  XSL service names must start with a lower case letter, should be camel case, and contain only alpha numeric characters]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS11]\n2015-10-18 21:59:33 INFO   Rule Index     [28]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Adapters]\n2015-10-18 21:59:33 INFO   Description    [Ensure Adapter Services Conform to the Naming Standards.  Adapter service names must start with a lower case letter, should be camel case, and contain only alpha numeric characters]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS12]\n2015-10-18 21:59:33 INFO   Rule Index     [29]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Trigger]\n2015-10-18 21:59:33 INFO   Description    [Ensure Triggers Conform to the Naming Standards.  Trigger names must start with a lower case letter, should be camel case, and contain only alpha numeric characters]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS13]\n2015-10-18 21:59:33 INFO   Rule Index     [30]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - WSD]\n2015-10-18 21:59:33 INFO   Description    [Ensure WSDs Conform to the Naming Standards.  WSD names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS14]\n2015-10-18 21:59:33 INFO   Rule Index     [31]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Connections]\n2015-10-18 21:59:33 INFO   Description    [Ensure Connections Conform to the Naming Standards.  Connection names must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS15]\n2015-10-18 21:59:33 INFO   Rule Index     [32]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Document variable names]\n2015-10-18 21:59:33 INFO   Description    [Ensure variable names within document defintions conform to the naming standards.  Variable names in document definitions must start with a lower case letter, should be camel case, and contain only alpha numeric characters.  Caters for documents generated from XSDs where the document name may contain namespace prefix and use of underscore and hyphen present]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.DocumentChecker]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS16]\n2015-10-18 21:59:33 INFO   Rule Index     [33]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Service Signature]\n2015-10-18 21:59:33 INFO   Description    [Ensure Input/Output variables in service signatures conform to the naming standards.  Variable names in service signatures must start with a lower case letter, should be camel case, and contain only alpha numeric characters]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowSignatureChecker]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   OPERATIONS EXECUTIION COMPLETE (in 3711ms)\n2015-10-18 21:59:33 INFO   EXECUTING SENSORS\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Sensor Id      [1]\n2015-10-18 21:59:33 INFO   Name           [totals]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.sensors.TotalsSensor]\n2015-10-18 21:59:33 INFO   Decorator Name [FlowTotals]\n2015-10-18 21:59:33 INFO   Decorator Impl [com.softwareag.gcs.wm.codereview.decorators.SummaryTotals]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Sensor Id      [2]\n2015-10-18 21:59:33 INFO   Name           [CodeLines]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.sensors.CodeLines]\n2015-10-18 21:59:34 INFO   Decorator Name [FlowComplexity]\n2015-10-18 21:59:34 INFO   Decorator Impl [com.softwareag.gcs.wm.codereview.decorators.FlowComplexity]\n2015-10-18 21:59:34 INFO   Decorator Name [FlowTotals]\n2015-10-18 21:59:34 INFO   Decorator Impl [com.softwareag.gcs.wm.codereview.decorators.FlowTotals]\n2015-10-18 21:59:35 INFO   Code Review XML Data Stored at : ****\\IotDemo_CodeReviewResults.xml\n2015-10-18 21:59:35 INFO   Using Report Stylesheet        : ****\\GenerateReport.xsl\n2015-10-18 21:59:35 INFO   Code Review Report Generated at: ****\\IotDemo_CodeReviewReport.html\n2015-10-18 21:59:35 INFO   Code Review CSV Data Stored at : **** \\IotDemo_CodeReviewResults.csv\n2015-10-18 21:59:35 INFO   CODE REVIEW STATUS - PASSED\n2015-10-18 21:59:35 INFO   ########     ###     ######   ######  ######## ########\n2015-10-18 21:59:35 INFO   ##     ##   ## ##   ##    ## ##    ## ##       ##     ##\n2015-10-18 21:59:35 INFO   ##     ##  ##   ##  ##       ##       ##       ##     ##\n2015-10-18 21:59:35 INFO   ########  ##     ##  ######   ######  ######   ##     ##\n2015-10-18 21:59:35 INFO   ##        #########       ##       ## ##       ##     ##\n2015-10-18 21:59:35 INFO   ##        ##     ## ##    ## ##    ## ##       ##     ##\n2015-10-18 21:59:35 INFO   ##        ##     ##  ######   ######  ######## ########\n2015-10-18 21:59:35 INFO\nCompleted\nComplete\n\n\n\n\nFinally, browse and open the HTML and CSV reports provided in the directory from where the command was executed\n\n\nLinux Command Line Execution\n\n\nSingle Package review\n\n\nFor linux, a shell script exists named\n\n\nCodeReview.sh\n\n\nThis can be executed using the same parameters as the windows version.  Note that like the windows script, you may need to modify this shell script to update environment variables.", 
            "title": "Overview"
        }, 
        {
            "location": "/index.html#overview", 
            "text": "Integration Server Continuous Code Review (ISCCR) has been developed by Software AG Global Consulting Services, and is provided through subscription license as a PERFORMANCE.READY tool.  It's aim is to provide quality check processing for Integration Server developments, both as part of a continuous integration and local development approach with Integration Server.  It checks and enables a development team to improve quality of your Integration Server services thereby assisting with readability, quality, standardizaton and ultimately minimising cost of change and reduces the maintenance burden.  This tool has a large number of customisable review points covering:   Quality issues  Common Mistakes  Coding standards   Deprecated services    plus many other service properties and coding issues.", 
            "title": "Overview"
        }, 
        {
            "location": "/index.html#compatibility", 
            "text": "Integration Server Continuous Code review is tested and compatible with the following releases of Integration Server:   webMethods v10.1  webMethods v10.0  webMethods v9.12  webMethods v9.10  webMethods v9.9  webMethods v9.8  webMethods v9.7  webMethods v9.6  webMethods v9.5  webMethods v9.0  webMethods v8.2", 
            "title": "Compatibility"
        }, 
        {
            "location": "/index.html#installation", 
            "text": "", 
            "title": "Installation"
        }, 
        {
            "location": "/index.html#code-review-engine", 
            "text": "", 
            "title": "Code Review Engine"
        }, 
        {
            "location": "/index.html#zip-file-extraction", 
            "text": "The ISCCR execution engine is distributed as a zip file and can simply be extracted into a location of your choosing (e.g. C:\\SoftwareAG\\tools\\CodeReview within the file system.  The file system within the zip file must be maintained whilst extracting, and will create a file structure similar to:", 
            "title": "Zip File Extraction"
        }, 
        {
            "location": "/index.html#license-file", 
            "text": "Following extraction, before execution you\u2019ll need to copy the code review engine licence file, renaming to license.txt into this directory, e.g.", 
            "title": "License File"
        }, 
        {
            "location": "/index.html#editing-codereviewcmd", 
            "text": "If you intend to use the sample windows script provided, and in particular if you\u2019re running the code review from within a Continuous Integration tool such as Jenkins, this file will need modifying to including the full path to the location where the tool has been extracted, e.g. assuming you extract the file to:  c:\\SoftwareAG\\tools\\ISCCR  You'll need to modify the CodeReview.cmd updating the CODEREVIEW_HOME environment variable, replacing the . with the full path to the installation directory i.e, find and replace the command  SET CODE_REVIEW_HOME=.  and change the '.' to your installation directory, e.g.  SET CODE_REVIEW_HOME=c:\\SoftwareAG\\tools\\ISCCR", 
            "title": "Editing CodeReview.cmd"
        }, 
        {
            "location": "/index.html#setting-java_home", 
            "text": "It's also recommended to set the JAVA_HOME environment variable.  The code review tool in windows will attempt to discover a suitable JVM to execute, however this should ideally be set teo the one distributed within webmethods, e.g.", 
            "title": "Setting JAVA_HOME"
        }, 
        {
            "location": "/index.html#eclipse-plugin", 
            "text": "The eclipse plugin is distributed as a zip file that can de installed into your Software AG designer eclipse environment as follows:   Stop any instances of Designer that are currently running  Browse to the designer eclipse dropins folder within the Software AG installation,    e.g.  c:\\SoftwareAG\\Designer\\eclipse\\dropins   Remove any previous ISCCR directory from the dropins location  Create a directory in the dropins location named:   ISCCR  Unzip the eclipse plugin into the ISCCR directory   This should create a file system structure as follows   C:\\SoftwareAG\\Designer\\eclipse\\dropins\\ISCCRv4\\plugins\\ContinuousCodeReview_Plugin_x.x.x.x.jar   Start Designer  After a few minutes designer will start with the plugin installed    Warning  Please be patient \u2013 the installation will take a few minutes and designer may look like the process has hung. \nDo NOT kill the designer process otherwise the installation will fail and further installations will be blocked without creating a different base directory (not called ISCCR) within the dropins location.*    On startup, enter the window/preferences settings as required, e.g:     Configure by pointing to the installation of the code review engine, and to the packages root folder within the designer where the plugin is installed  Additionally, add the prefixes of custom packages that you wish to be reviewed and any JVM Parameters.  When finished press ok", 
            "title": "Eclipse Plugin"
        }, 
        {
            "location": "/index.html#wxisccr-package", 
            "text": "Note  This pacakge only exists to support the older Centralized (Non-Local Development) approach, and is otherwise not needed   The WxISCCR package is provided as a zip, that can be imported into the Integration Server as any other package, through the install inbound pacakges functionality.", 
            "title": "WxISCCR Package"
        }, 
        {
            "location": "/index.html#quick-start", 
            "text": "", 
            "title": "Quick Start"
        }, 
        {
            "location": "/index.html#windows-command-line-execution", 
            "text": "", 
            "title": "Windows Command Line Execution"
        }, 
        {
            "location": "/index.html#single-package-review", 
            "text": "After following the installation notes above, ISCCR can be run in windows to review single packages  using the supplied command script by opening a command prompt, navigating to the extracted directory and supplying individual package details.  The format of the command prompt is as follows:  CodeReview.cmd  -Dcode.review.directory=[LOCATION OF PACKAGES DIRECTORY]  -Dcode.review.pkgname=[PACKAGE NAME]  -Dcode.review.pkgprefix=[PACKAGE PREFIX LETTERS]", 
            "title": "Single Package Review"
        }, 
        {
            "location": "/index.html#example", 
            "text": "Assuming a package named  IotDemo  CodeReview.cmd -Dcode.review.directory=c:\\softwareag\\IntegrationServer\\instances\\default\\packages -Dcode.review.pkgname=IotDemo -Dcode.review.pkgprefix=Iot  The output of this command for a \u2018Passed test\u2019 with \u2018INFO\u2019 level debug will be similar to:  CodeReview.cmd -Dcode.review.directory=c:\\SoftwareAG\\IntegrationServer\\instances\\default\\packages -Dcode.review.pkgname=IotDemo -Dcode.review.pkgprefix=Iot\nLooking for JREv1.8\nC:\\Program Files\\Java\\jre1.8.0_51\nFound Compatible JVM at: C:\\Program Files\\Java\\jre1.8.0_51\nStarting Continuous Code Review Using discovered JVM\n2015-10-18 21:59:28 INFO   webMethods Integration Server Continuous Code Review\n2015-10-18 21:59:28 INFO   Software AG Global Consulting Services\n2015-10-18 21:59:28 INFO   Copyright (C)2015 Software AG.  All rights reserved\n2015-10-18 21:59:28 INFO   Author  : dave.pemberton@softwareag.com\n2015-10-18 21:59:28 INFO   Version : _VERSION_\n2015-10-18 21:59:28 INFO   Build   : _BUILD_\n2015-10-18 21:59:28 INFO   Run Mode: INTERACTIVE\n2015-10-18 21:59:28 INFO   -------------------------------------------------------------------------\n2015-10-18 21:59:28 INFO   Exec Directory   [C:/Development/workspace/FlowCodeChecker/build/dist/lib/GCS_ContinuousCodeReview-Pub.jar]\n2015-10-18 21:59:28 INFO   Loading Default Configuration Options File\n2015-10-18 21:59:28 INFO   Options File     [*******************/config.xml]\n2015-10-18 21:59:29 INFO   Custom Options   [c:\\SoftwareAG\\IntegrationServer\\instances\\default\\packages\\IotDemo\\config\\codereview.xml] exists within package - Loading and merging with settings]\n2015-10-18 21:59:29 INFO   Custom Options   [c:\\SoftwareAG\\IntegrationServer\\instances\\default\\packages\\IotDemo\\config\\codereview.xml] provided. Loading and merging with defaults\n2015-10-18 21:59:29 INFO   Code Directory   [c:\\SoftwareAG\\IntegrationServer\\instances\\default\\packages\\IotDemo\\]\n2015-10-18 21:59:29 INFO   Report Directory []\n2015-10-18 21:59:29 INFO   Package Name     [IotDemo]\n2015-10-18 21:59:29 INFO   ------------------------ LICENCE DETAILS ------------------------\n2015-10-18 21:59:29 INFO   Using License file : **************\\license.txt\n2015-10-18 21:59:29 INFO   Licensed to        : ***********************************\n2015-10-18 21:59:29 INFO   Serial Number:     : ***********************************\n2015-10-18 21:59:29 INFO   License Comments   : ***********************************\n2015-10-18 21:59:29 INFO   Licence Checked and is valid\n2015-10-18 21:59:30 INFO   EXECUTING OPERATIONS\n2015-10-18 21:59:30 INFO   -----------------------------------------------------------\n2015-10-18 21:59:30 INFO   Rule Id        [SP1]\n2015-10-18 21:59:30 INFO   Rule Index     [1]\n2015-10-18 21:59:30 INFO   Name           [Stateless]\n2015-10-18 21:59:30 INFO   Description    [Services should be stateless to avoid creating session state where not needed. Each session consumes resources on the IS, consumes memory, creates a database entry, and in a clustered environment needs\nto be synchronized between cluster nodes. To minimize the build-up of unnecessary sessions it is recommended to ensure stateless services are used where possible.  This can be changed on the 'stateless' flow property within Designer by setting the value to yes.\nThe table below highlights all services in the package which are currently configured as stateless]\n2015-10-18 21:59:30 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.ServiceProperties]\n2015-10-18 21:59:30 INFO   Ignore Failure [false]\n2015-10-18 21:59:30 INFO   -----------------------------------------------------------\n2015-10-18 21:59:30 INFO   Rule Id        [SP2]\n2015-10-18 21:59:30 INFO   Rule Index     [2]\n2015-10-18 21:59:30 INFO   Name           [Pipeline Save Restore]\n2015-10-18 21:59:30 INFO   Description    [No Save/Restore Pipeline options should be set against the service.  The Save/Restore pipeline options where set can result in unnecessary IO and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised.  It is recommended to remote these options from the services before deployment to a non-development environment, or use the extended property (watt.server.pipeline.processor) to disable these in the non-development environments.  Where this is the case, this rule can be ignored]\n2015-10-18 21:59:30 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.ServiceProperties]\n2015-10-18 21:59:30 INFO   Ignore Failure [false]\n2015-10-18 21:59:30 INFO   -----------------------------------------------------------\n2015-10-18 21:59:30 INFO   Rule Id        [FQ1]\n2015-10-18 21:59:30 INFO   Rule Index     [3]\n2015-10-18 21:59:30 INFO   Name           [Pipeline Services]\n2015-10-18 21:59:30 INFO   Description    [No Save/Restore/Trace Pipieline services should exist within the flow service.  Save/Restore pipeline services result in unnecessary IO and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised.  It is recommended to delete these from the services before deployment to a non-development environment to ensure maximum performance.  Alternative to this is to use the pipeline service options from within designer and disable these in the non-development environments as described in the previous check.]\n2015-10-18 21:59:30 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:30 INFO   Ignore Failure [false]\n2015-10-18 21:59:30 INFO   -----------------------------------------------------------\n2015-10-18 21:59:30 INFO   Rule Id        [FQ2]\n2015-10-18 21:59:30 INFO   Rule Index     [4]\n2015-10-18 21:59:30 INFO   Name           [Clear Pipeline]\n2015-10-18 21:59:30 INFO   Description    [The ClearPipeline service should not be used as pipeline variables should be dropped immediately as soon as they are no longer required.  ClearPipeline leads to unnecessary overhead at the pipeline is walked to determine whether to preserve or drop variables, and can have significant impact on performance when a large pipeline is present.  It is recommended to delete these services from the flow and drop variables once they are no longer needed.]\n2015-10-18 21:59:30 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:30 INFO   Ignore Failure [false]\n2015-10-18 21:59:30 INFO   -----------------------------------------------------------\n2015-10-18 21:59:30 INFO   Rule Id        [FQ3]\n2015-10-18 21:59:30 INFO   Rule Index     [5]\n2015-10-18 21:59:30 INFO   Name           [Deprecated Services]\n2015-10-18 21:59:30 INFO   Description    [Use of deprecated services is not recommended as these will be dropped from the product in a future release.  Please refer to the built-in-services-guide for replacements to any deprecated services discovered to be in use and modify the flow to remove the deprecated service and update with the recommended alternative.]\n2015-10-18 21:59:30 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:30 INFO   Ignore Failure [false]\n2015-10-18 21:59:32 INFO   -----------------------------------------------------------\n2015-10-18 21:59:32 INFO   Rule Id        [FQ4]\n2015-10-18 21:59:32 INFO   Rule Index     [6]\n2015-10-18 21:59:32 INFO   Name           [Disabled Services]\n2015-10-18 21:59:32 INFO   Description    [services should be removed to avoid performance issues as the flow is interpreted during execution.  This also results in smaller, more maintainable flow services which result in a better understanding and lower cost of maintenance.  Recommendation is to delete rather than disable any code no longer needed.]\n2015-10-18 21:59:32 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:32 INFO   Ignore Failure [false]\n2015-10-18 21:59:32 INFO   -----------------------------------------------------------\n2015-10-18 21:59:32 INFO   Rule Id        [FQ5]\n2015-10-18 21:59:32 INFO   Rule Index     [7]\n2015-10-18 21:59:32 INFO   Name           [Use of Pub.Storage]\n2015-10-18 21:59:32 INFO   Description    [pub.storage services should not be used due to performance issues.  The pub.storage services have an implicit locking model and are not intended to be a high performance all-purpose database.  Where pub.storage services have been used, it is recommended to re-architect these, particularly in high-throughput scenarios.]\n2015-10-18 21:59:32 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:32 INFO   Ignore Failure [false]\n2015-10-18 21:59:32 INFO   -----------------------------------------------------------\n2015-10-18 21:59:32 INFO   Rule Id        [FQ6]\n2015-10-18 21:59:32 INFO   Rule Index     [8]\n2015-10-18 21:59:32 INFO   Name           [Debug Log]\n2015-10-18 21:59:32 INFO   Description    [Debug Log services should be removed to avoid performance issues during execution.  Where logging is required, the recommendation is to implement a more general purpose and configurable logging framework to help keep you logs more manageable and separate from product logging]\n2015-10-18 21:59:32 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:32 INFO   Ignore Failure [false]\n2015-10-18 21:59:32 INFO   -----------------------------------------------------------\n2015-10-18 21:59:32 INFO   Rule Id        [FQ7]\n2015-10-18 21:59:32 INFO   Rule Index     [9]\n2015-10-18 21:59:32 INFO   Name           [Public Services Try/Catch]\n2015-10-18 21:59:32 INFO   Description    [Public services must have a try catch within them to ensure graceful handling of error conditions when these occur.  Public services (or top level services) need to decide how to retry or return the error condition to the consuming application.  Recommendation is to use Sequence nodes to wrap the execution of the public service within a try/catch block and use the catch to handle the error condition.  Try/catch can be achieved with sequence nodes by having a top level sequence with the exit on value set to  SUCCESS  and 2 inner sequences, the try, with the exit on value set to  FAILURE  and the catch, with the exit on value set to  DONE .  It is also recommended to add comments to these sequences to aid understanding so that a developer can identify these are for try/catch usage. ]\n2015-10-18 21:59:32 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FilteredFlowXMLXpathChecker]\n2015-10-18 21:59:32 INFO   Ignore Failure [false]\n2015-10-18 21:59:32 INFO   -----------------------------------------------------------\n2015-10-18 21:59:32 INFO   Rule Id        [FQ8]\n2015-10-18 21:59:32 INFO   Rule Index     [10]\n2015-10-18 21:59:32 INFO   Name           [Connections Package]\n2015-10-18 21:59:32 INFO   Description    [All JDBC Adapter connections should be in separate packages, that is a package should not contain connections mixed in with other assets.  This aids deployment of services as this means changes to packages can be deployed without unnecessarily affecting the JDBC Adapter database connections.  Recommendation is to have adapter connections in packages on their own, and not mix these types.]\n2015-10-18 21:59:32 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.ConnectionsChecker]\n2015-10-18 21:59:32 INFO   Ignore Failure [false]\n2015-10-18 21:59:32 INFO   -----------------------------------------------------------\n2015-10-18 21:59:32 INFO   Rule Id        [FQ9]\n2015-10-18 21:59:32 INFO   Rule Index     [11]\n2015-10-18 21:59:32 INFO   Name           [FTP Timeout]\n2015-10-18 21:59:32 INFO   Description    [Ensure timeout is specified on FTP services.  If no timeout is specified on FTP services, the default timeout value is unlimited, meaning there is a possibility of consuming threads on the Integration Server for a long period of time, especially in the scenario where the FTP server isn't available.  Recommendation is to add a timeout value to the invocation where these services are used.]\n2015-10-18 21:59:32 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:32 INFO   Ignore Failure [false]\n2015-10-18 21:59:32 INFO   -----------------------------------------------------------\n2015-10-18 21:59:32 INFO   Rule Id        [FQ10]\n2015-10-18 21:59:32 INFO   Rule Index     [12]\n2015-10-18 21:59:32 INFO   Name           [Service invoke comments]\n2015-10-18 21:59:32 INFO   Description    [Comments should be provided for each service that is invoked from the main service.  This helps to improve code readability and maintainability to help reduce cost of change.  Every service invoke should have a comment value set.]\n2015-10-18 21:59:32 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:32 INFO   Ignore Failure [true]\n2015-10-18 21:59:32 INFO   -----------------------------------------------------------\n2015-10-18 21:59:32 INFO   Rule Id        [FQ11]\n2015-10-18 21:59:32 INFO   Rule Index     [13]\n2015-10-18 21:59:32 INFO   Name           [Sequence comments]\n2015-10-18 21:59:32 INFO   Description    [Comments should be provided for each sequence node that is used.  This helps to improve code readability and maintainability to help reduce cost of change.  Every sequence node should have a comment value set.]\n2015-10-18 21:59:32 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:32 INFO   Ignore Failure [true]\n2015-10-18 21:59:32 INFO   -----------------------------------------------------------\n2015-10-18 21:59:32 INFO   Rule Id        [FQ12]\n2015-10-18 21:59:32 INFO   Rule Index     [14]\n2015-10-18 21:59:32 INFO   Name           [Unauthorised Access/Orphaned]\n2015-10-18 21:59:32 INFO   Description    [All services within this package should be invoked through a public service.  This rule Identifies any assets within the package that are not used directly or indirectly from a public flow service or DSP file contained within this package, and therefore are either not used, or are called from outside the package breaking the public/private access principle.]\n2015-10-18 21:59:32 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.OrphanedChecker]\n2015-10-18 21:59:32 INFO   Ignore Failure [true]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [FQ13]\n2015-10-18 21:59:33 INFO   Rule Index     [15]\n2015-10-18 21:59:33 INFO   Name           [Branch without switch or evaluate labels]\n2015-10-18 21:59:33 INFO   Description    [The BRANCH step selects and executes a child step based on the value of one or more variables in the pipeline. You indicate the variables you want to branch on by specifying a switch value or by writing an expression that includes the variables, therefore a branch must have either a switch value or have evaluate labels set to true.]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [FQ14]\n2015-10-18 21:59:33 INFO   Rule Index     [16]\n2015-10-18 21:59:33 INFO   Name           [Branch on expression when child step is without specified label or $null]\n2015-10-18 21:59:33 INFO   Description    [If you branch on expressions (Evaluate labels is set to True), you cannot branch on null or empty values. When executing the BRANCH step and evaluating labels, Integration Server ignores target steps with a blank or set to $null label.]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [FQ15]\n2015-10-18 21:59:33 INFO   Rule Index     [17]\n2015-10-18 21:59:33 INFO   Name           [Exit Node From Specification]\n2015-10-18 21:59:33 INFO   Description    [The EXIT step exits the entire flow service or a single flow step. Specifically, it may exit from the nearest ancestor loop step, a specified ancestor step, the parent step, or the entire flow service.  An exit 'From' value is required to determine where to exit from]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS1]\n2015-10-18 21:59:33 INFO   Rule Index     [18]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Root Folder ]\n2015-10-18 21:59:33 INFO   Description    [Root Folder should not be the same as the package as this can cause namespace issues should the code need to be refactored or moved to other packages for promotion to common services, inhibiting reusability.  Recommendation is to set a separate prefix folder structure from the package and use this across all packages differentiating below the prefix.  This can be one or two levels deep (but ideally should be no more) and commonly is the inverse domain name of the organisation, e.g.  com.softwareag ]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS2]\n2015-10-18 21:59:33 INFO   Rule Index     [19]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Folder ]\n2015-10-18 21:59:33 INFO   Description    [Folders should only contain lower case ascii characters and digits.  In certain scenarios, use of the underscore character '_' is allowed but should be avoided where possible.]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS3]\n2015-10-18 21:59:33 INFO   Rule Index     [20]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Folder Prefix]\n2015-10-18 21:59:33 INFO   Description    [Ensure that all assets exist within the specified prefix folders.  Recommendation is to set a separate prefix folder structure from the package and use this across all packages differentiating below the prefix.  This can be one or two levels deep (but ideally should be no more) and commonly is the inverse domain name of the organisation, e.g.  com.softwareag .]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS4]\n2015-10-18 21:59:33 INFO   Rule Index     [21]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Package]\n2015-10-18 21:59:33 INFO   Description    [Ensure the package prefix has been specified and package name conforms to standards.   br/ 1. The package name should not end with the word  Package  or  Pkg .   br/ 2. Package names must not be prefixed with  Wm . These usually represent packages distributed by webMethods.  br/ 3. Packages should start with an uppercase character and only contain alpha numeric character plus the underscore when absolutely required..  br/ 4. Package Name should start with your provided prefix.  A package prefix aids identification of packages created by the organisation.]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS5]\n2015-10-18 21:59:33 INFO   Rule Index     [22]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Services]\n2015-10-18 21:59:33 INFO   Description    [Ensure Services (Flow and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST services)]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS6]\n2015-10-18 21:59:33 INFO   Rule Index     [23]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Documents]\n2015-10-18 21:59:33 INFO   Description    [Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary.\nDocuments generated from XSDs may be named docTypeRef_* and these are catered for in this check.]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS7]\n2015-10-18 21:59:33 INFO   Rule Index     [24]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Schemas]\n2015-10-18 21:59:33 INFO   Description    [Ensure Schemas definitions conform to naming standards.  A schema must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary.]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS8]\n2015-10-18 21:59:33 INFO   Rule Index     [25]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - FlatFiles]\n2015-10-18 21:59:33 INFO   Description    [Ensure Flat File Dictionaries and Schema definitions conform to naming standards.  They must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary.]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS9]\n2015-10-18 21:59:33 INFO   Rule Index     [26]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Blaze]\n2015-10-18 21:59:33 INFO   Description    [Ensure Blaze Rules Conform to the Naming Standards.   Blaze rule service names must only contain alpha numeric characters and the underscore when absolutely necessary.]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS10]\n2015-10-18 21:59:33 INFO   Rule Index     [27]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - XSL]\n2015-10-18 21:59:33 INFO   Description    [Ensure XSL Services Conform to the Naming Standards.  XSL service names must start with a lower case letter, should be camel case, and contain only alpha numeric characters]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS11]\n2015-10-18 21:59:33 INFO   Rule Index     [28]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Adapters]\n2015-10-18 21:59:33 INFO   Description    [Ensure Adapter Services Conform to the Naming Standards.  Adapter service names must start with a lower case letter, should be camel case, and contain only alpha numeric characters]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS12]\n2015-10-18 21:59:33 INFO   Rule Index     [29]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Trigger]\n2015-10-18 21:59:33 INFO   Description    [Ensure Triggers Conform to the Naming Standards.  Trigger names must start with a lower case letter, should be camel case, and contain only alpha numeric characters]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS13]\n2015-10-18 21:59:33 INFO   Rule Index     [30]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - WSD]\n2015-10-18 21:59:33 INFO   Description    [Ensure WSDs Conform to the Naming Standards.  WSD names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS14]\n2015-10-18 21:59:33 INFO   Rule Index     [31]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Connections]\n2015-10-18 21:59:33 INFO   Description    [Ensure Connections Conform to the Naming Standards.  Connection names must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.NamingStandards]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS15]\n2015-10-18 21:59:33 INFO   Rule Index     [32]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Document variable names]\n2015-10-18 21:59:33 INFO   Description    [Ensure variable names within document defintions conform to the naming standards.  Variable names in document definitions must start with a lower case letter, should be camel case, and contain only alpha numeric characters.  Caters for documents generated from XSDs where the document name may contain namespace prefix and use of underscore and hyphen present]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.DocumentChecker]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Rule Id        [NS16]\n2015-10-18 21:59:33 INFO   Rule Index     [33]\n2015-10-18 21:59:33 INFO   Name           [Naming Standards - Service Signature]\n2015-10-18 21:59:33 INFO   Description    [Ensure Input/Output variables in service signatures conform to the naming standards.  Variable names in service signatures must start with a lower case letter, should be camel case, and contain only alpha numeric characters]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.operations.FlowSignatureChecker]\n2015-10-18 21:59:33 INFO   Ignore Failure [false]\n2015-10-18 21:59:33 INFO   OPERATIONS EXECUTIION COMPLETE (in 3711ms)\n2015-10-18 21:59:33 INFO   EXECUTING SENSORS\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Sensor Id      [1]\n2015-10-18 21:59:33 INFO   Name           [totals]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.sensors.TotalsSensor]\n2015-10-18 21:59:33 INFO   Decorator Name [FlowTotals]\n2015-10-18 21:59:33 INFO   Decorator Impl [com.softwareag.gcs.wm.codereview.decorators.SummaryTotals]\n2015-10-18 21:59:33 INFO   -----------------------------------------------------------\n2015-10-18 21:59:33 INFO   Sensor Id      [2]\n2015-10-18 21:59:33 INFO   Name           [CodeLines]\n2015-10-18 21:59:33 INFO   Implementation [com.softwareag.gcs.wm.codereview.sensors.CodeLines]\n2015-10-18 21:59:34 INFO   Decorator Name [FlowComplexity]\n2015-10-18 21:59:34 INFO   Decorator Impl [com.softwareag.gcs.wm.codereview.decorators.FlowComplexity]\n2015-10-18 21:59:34 INFO   Decorator Name [FlowTotals]\n2015-10-18 21:59:34 INFO   Decorator Impl [com.softwareag.gcs.wm.codereview.decorators.FlowTotals]\n2015-10-18 21:59:35 INFO   Code Review XML Data Stored at : ****\\IotDemo_CodeReviewResults.xml\n2015-10-18 21:59:35 INFO   Using Report Stylesheet        : ****\\GenerateReport.xsl\n2015-10-18 21:59:35 INFO   Code Review Report Generated at: ****\\IotDemo_CodeReviewReport.html\n2015-10-18 21:59:35 INFO   Code Review CSV Data Stored at : **** \\IotDemo_CodeReviewResults.csv\n2015-10-18 21:59:35 INFO   CODE REVIEW STATUS - PASSED\n2015-10-18 21:59:35 INFO   ########     ###     ######   ######  ######## ########\n2015-10-18 21:59:35 INFO   ##     ##   ## ##   ##    ## ##    ## ##       ##     ##\n2015-10-18 21:59:35 INFO   ##     ##  ##   ##  ##       ##       ##       ##     ##\n2015-10-18 21:59:35 INFO   ########  ##     ##  ######   ######  ######   ##     ##\n2015-10-18 21:59:35 INFO   ##        #########       ##       ## ##       ##     ##\n2015-10-18 21:59:35 INFO   ##        ##     ## ##    ## ##    ## ##       ##     ##\n2015-10-18 21:59:35 INFO   ##        ##     ##  ######   ######  ######## ########\n2015-10-18 21:59:35 INFO\nCompleted\nComplete  Finally, browse and open the HTML and CSV reports provided in the directory from where the command was executed", 
            "title": "Example"
        }, 
        {
            "location": "/index.html#linux-command-line-execution", 
            "text": "", 
            "title": "Linux Command Line Execution"
        }, 
        {
            "location": "/index.html#single-package-review_1", 
            "text": "For linux, a shell script exists named  CodeReview.sh  This can be executed using the same parameters as the windows version.  Note that like the windows script, you may need to modify this shell script to update environment variables.", 
            "title": "Single Package review"
        }, 
        {
            "location": "/About/License/index.html", 
            "text": "License\n\n\nIntegration Server Continuous Code Review\n\n\nPERFORMANCE.READY TOOLS\n\n\nSoftware AG Global Consulting Services\n\n\nPART A: GENERAL TERMS\n\n\nYou are not allowed to install or use the Product without a corresponding\nlicense agreement.\n\n\nIf you have entered into a commercial license agreement with one of\nSoftware AG's subsidiaries or distributors (\"Commercial License Agreement\")\nthe installation and use of the Product is subject to your acceptance of\nadditional terms which are provided in your agreement\n\n\nCOPYRIGHT AND TRADEMARK NOTICE\n\n\nThe name Software AG and all Software AG product names are either trademarks\nregistered trademarks of Software AG and/or Software AG USA Inc. and/or its\nsubsidiaries and/or its affiliates  and/or their licensors.\n\n\nOther company and product names mentioned herein may be trademarks of their\nrespective owners \n\n\nSoftware AG or its subsidiaries are the sole owner of all intellectual\nproperty rights to the Products and accompanying user documentation or have\nthe respective distribution rights. References made in or on the Products to\nthe copyright and/or to the industrial property rights must not be altered,\ndeleted or obliterated in any manner.\n\n\nNo right, title or interest in any trademark or trade names of Software AG\nor its subsidiaries or its licensors is granted hereunder.\n\n\n(c) Copyright 2018 Software AG, Darmstadt, Germany and/or Software AG USA\nInc., Reston, VA, USA and/or its subsidiaries and/or its affiliates and/or\ntheir licensors.\n\n\nPART B: ADDITIONAL TERMS COMMERCIAL LICENSE\n\n\nThe Commercial License Agreement does not grant you the right to sublicense,\nrent, assign or lease the software, in whole or in part, and you may not\ndecompile, disassemble, modify, decrypt, extract or otherwise reverse engineer,\nor make further copies of the software, except as explicitly permitted by\nthe Commercial License Agreement.\n\n\nThe software is designed for general office use. It is not designed or\nintended for use in air traffic control, mass transit systems, critical\nmedical purposes, the operation of nuclear facilities or any other use which\ncould result in a high risk of safety or property damage. You warrant that\nyou will not use the software for such purposes.\n\n\nYou may not download or otherwise export or re-export any underlying\nsoftware, technology or other information from the Products except as stated\nexplicitly in this notice or the Commercial License Agreement and in full\ncompliance with all applicable national and international laws and\nregulations. You agree to indemnify and hold harmless and defend Software AG\nagainst any and all liability arising from or relating to your breach of these\nexport control undertakings.  Software AG reserves the right not to honor any\naffected parts of this notice, or the Commercial License Agreement, in case\nany national or international export regulations or foreign trade legislation,\nor any target country / customer / usage restrictions implied by embargos or\nother sanctions prohibit the provision of export controlled goods\n(Dual-Use items) and services to be granted to you under either this notice\nor the Commercial License Agreement. Software AG may inform you if a related\nofficial export approval by national or international export control\nauthorities is required. Provision of affected Products will then be postponed\nuntil all such required approvals have been granted. The provision of Products\nnot restricted by the above mentioned export prohibitions will remain unaffected\nof this restriction.\n\n\nPART C: NOT APPLICABLE\n\n\nPART D: SOFTWARE AG EVALUATION LICENSE AGREEMENT FOR TRIAL VERSIONS OF SOFTWARE AG PRODUCT ONLY\n\n\nIMPORTANT: PLEASE READ THIS SOFTWARE AG EVALUATION LICENSE AGREEMENT CAREFULLY\nBEFORE INSTALLING THE PRODUCT! THE TERMS OF THIS EVALUATION LICENSE AGREEMENT\nAPPLY ONLY IF YOU HAVE NOT ALREADY EXECUTED A COMMERCIAL LICENSE AGREEMENT FOR\nTHE PRODUCT WITH A SOFTWARE AG SUBSIDIARY OR DISTRIBUTOR.\n\n\nEVALUATION LICENSE AGREEMENT FOR TRIAL VERSION\nBy installing the Product, you, as licensee, are entering into an agreement\nwith Software AG, as licensor, with GENERAL TERMS as defined in Part A, as\nwell as with terms set forth below (Part D). In case of conflicting terms\nbetween Part A and D, the terms of this Part D shall apply (\"Evaluation)\nLicense Agreement\"). If you do not agree to the terms of this agreement,\nyou must immediately, and in any case before installation, destroy the\nProduct and all copies of the Product in physical, electronic or other form.\n\n\nTHE LICENSE\nWith this Evaluation License Agreement, Software AG grants you - free of charge\n- a non-exclusive license to use the Product and accompanying documentation on\na single computer, on a workstation or on a single terminal within a network\nfor evaluation and testing purposes for a time period defined below (see\nsection License Validity). In no event may the Product be deployed or used\nfor any commercial production purpose such as developing new applications or\ntesting, supporting, maintaining, or reengineering of existing applications,\nunless you acquire a commercial license from Software AG and pay the applicable\nlicense fees. You may not pass on copies of the Product to any third party or\ntransfer the Product by electronic means to other computers via a network. For\nmulti-user hardware systems or networks, a separate license is required for\neach user or each workstation. You have the right to make one copy of the\nProduct solely for archival and backup purposes. You may not decompile,\ndisassemble, modify, decrypt, extract or otherwise reverse engineer, or\nmake further copies of the Product or parts thereof. This Evaluation License\nAgreement, with the downloaded or otherwise provided and used authorization\nkey, is proof of your entering into this agreement and you must retain it. This\nEvaluation License Agreement does not grant you the right to sublicense,\ntransfer, rent, assign or lease the Product, in whole or in part.\n\n\nTHIRD PARTY RESTRICTIONS\nThe Software may contain or include software applications for which the\nLicensor itself had to acquire a license to use from a third party\n(\"Third Party Applications\"). These Third Party Applications may be subject\nto additional license terms (\"Third Party Terms\"), which are available under\nthe web address http://documentation.softwareag.com/legal/thirdparty.htm.\nThe third party shall be entitled - only in relation to the respective\nthird-party software - to exercise the rights of Licensor under this Evaluation\nLicense Agreement as a third party beneficiary directly against the licensee.\nYou may not use or distribute these third party applications or its APIs on a \nstand-alone basis without the Product nor attempt to alter or modify it.  \n\n\nLICENSE VALIDITY\nThis Evaluation License Agreement is limited to a period\nas defined in the license key file. The license might\nlimit your use of the Product to certain features, platforms or restrictions\nin capacity or other limitations incorporated by default, by license key\nfile. You accept these limitations and will in no event bypass these.\n\n\nCOPYRIGHT\nSoftware AG or its affiliates are the sole owner of the industrial property\nrights and copyright to the Product and accompanying user documentation or\nhave the respective distribution rights. References made in or on the Product\nto the copyright or to other industrial property rights must not be altered,\ndeleted or obliterated in any manner.\n\n\nCONFIDENTIALITY\nThe Product is confidential and proprietary information of Software AG and\nits licensors, and may not be disclosed to third parties. You shall use\nsuch information only for the purpose of exercising the Evaluation License\nAgreement to the Product and shall disclose confidential and proprietary\ninformation only to your employees who require such information for the\npurpose stated above. You agree to take adequate steps to protect the Product\nfrom unauthorized disclosure or use.\n\n\nLIMITED WARRANTY\nThe Product is provided \"as is\" without any warranty whatsoever. You\nassume full responsibility for the selection of the Product to achieve your\nintended results and for the installation, use and results obtained from\nthe Product. Any kind of support for the Software AG Product is explicitly\nexcluded.\n\n\nUPDATES AND MAINTENANCE\nThis Evaluation License Agreement does not grant you any right to, license\nfor or interest in any improvements, modifications, enhancements or updates\nto the Product and documentation or other support services. Such services\nare typically available under a Commercial License Agreement only. Any such\narrangements shall be the subject of a separate written agreement.\n\n\nLIMITATION OF LIABILITY\nExcept where there is a mandatory statutory liability for intent, gross \nnegligence or injury to life, body or health, under no circumstances shall \nSoftware AG or its licensors be liable for any damages whatsoever (including,\nwithout limitation, damages for loss of business profits, work stoppage, loss\nof data or other financial loss) arising from the use of, or inability to use,\nthis Product. In no event shall any liability of Software AG arising out of \nthis agreement exceed the amount paid, if any, by you to Software AG hereunder.\n\n\nTERMINATION\nThis Evaluation License Agreement will terminate immediately without notice\nfrom Software AG if you fail to comply with any provision of this Evaluation\nLicense Agreement. Software AG reserves the right to terminate this agreement\nimmediately for good cause, whereby good cause is understood as any gross\nbreach of this agreement. Upon termination, you must immediately discontinue\nthe use of the Product and destroy the Product and all copies of the Product\nin physical, electronic or other form. Upon request of Software AG licensee will \ncertify in written that use is discontinued and all copies of the Product are \ndestroyed.  \n\n\nEXPORT\nYou may not download or otherwise export or re-export any underlying\nsoftware, technology or other information from the Products except as stated\nexplicitly in this notice or the Commercial License Agreement and in full\ncompliance with all applicable national and international laws and\nregulations. You agree to indemnify and hold harmless and defend Software AG\nagainst any and all liability arising from or relating to your breach of these\nexport control undertakings.  Software AG reserves the right not to honor any\naffected parts of this notice, or the Commercial License Agreement, in case\nany national or international export regulations or foreign trade legislation,\nor any target country / customer / usage restrictions implied by embargos or\nother sanctions prohibit the provision of export controlled goods\n(Dual-Use items) and services to be granted to you under either this notice\nor the Commercial License Agreement. Software AG may inform you if a related\nofficial export approval by national or international export control\nauthorities is required. Provision of affected Products will then be postponed\nuntil all such required approvals have been granted. The provision of Products\nnot restricted by the above mentioned export prohibitions will remain unaffected\nof this restriction.\n\n\nMISCELLANEOUS\nThe Product is designed for general office use. It is not designed or\nintended for use in air traffic control, mass transit systems, critical\nmedical purposes, the operation of nuclear facilities or any other use which\ncould result in a high risk of safety or property damage. You warrant that\nyou will not use the Product for such purposes.\n\n\nThe invalidity of any provision of this agreement shall not affect any other\npart of this agreement. This agreement represents the complete and exclusive\nstatement concerning this Evaluation License Agreement between the parties. No\nmodification or amendment of this agreement will be binding on any party\nunless acknowledged in writing by their duly authorized representatives. This\nagreement shall be governed and construed by the laws of the Federal Republic\nof Germany.\n\n\nIncluded Projects\n\n\nThemes used under license from the ReadTheDocs projects.\n\n\n\n\nReadTheDocs theme - \nView license\n.\n\n\n\n\nMany thanks to the authors and contributors of those wonderful projects.\n\n\nMkDocs License (BSD)\n\n\nCopyright \u00a9 2014, Tom Christie. All rights reserved.\n\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n\nRedistributions of source code must retain the above copyright notice, this list\nof conditions and the following disclaimer. Redistributions in binary form must\nreproduce the above copyright notice, this list of conditions and the following\ndisclaimer in the documentatio and/or other materials provided with the\ndistribution.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nChartJS.org (MIT)\n\n\n\n\nThe MIT License (MIT) - \nView license\n.\n\n\n\n\nCopyright (c) 2018 Chart.js Contributors\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", 
            "title": "License"
        }, 
        {
            "location": "/About/License/index.html#license", 
            "text": "Integration Server Continuous Code Review  PERFORMANCE.READY TOOLS  Software AG Global Consulting Services", 
            "title": "License"
        }, 
        {
            "location": "/About/License/index.html#part-a-general-terms", 
            "text": "You are not allowed to install or use the Product without a corresponding\nlicense agreement.  If you have entered into a commercial license agreement with one of\nSoftware AG's subsidiaries or distributors (\"Commercial License Agreement\")\nthe installation and use of the Product is subject to your acceptance of\nadditional terms which are provided in your agreement  COPYRIGHT AND TRADEMARK NOTICE  The name Software AG and all Software AG product names are either trademarks\nregistered trademarks of Software AG and/or Software AG USA Inc. and/or its\nsubsidiaries and/or its affiliates  and/or their licensors.  Other company and product names mentioned herein may be trademarks of their\nrespective owners   Software AG or its subsidiaries are the sole owner of all intellectual\nproperty rights to the Products and accompanying user documentation or have\nthe respective distribution rights. References made in or on the Products to\nthe copyright and/or to the industrial property rights must not be altered,\ndeleted or obliterated in any manner.  No right, title or interest in any trademark or trade names of Software AG\nor its subsidiaries or its licensors is granted hereunder.  (c) Copyright 2018 Software AG, Darmstadt, Germany and/or Software AG USA\nInc., Reston, VA, USA and/or its subsidiaries and/or its affiliates and/or\ntheir licensors.", 
            "title": "PART A: GENERAL TERMS"
        }, 
        {
            "location": "/About/License/index.html#part-b-additional-terms-commercial-license", 
            "text": "The Commercial License Agreement does not grant you the right to sublicense,\nrent, assign or lease the software, in whole or in part, and you may not\ndecompile, disassemble, modify, decrypt, extract or otherwise reverse engineer,\nor make further copies of the software, except as explicitly permitted by\nthe Commercial License Agreement.  The software is designed for general office use. It is not designed or\nintended for use in air traffic control, mass transit systems, critical\nmedical purposes, the operation of nuclear facilities or any other use which\ncould result in a high risk of safety or property damage. You warrant that\nyou will not use the software for such purposes.  You may not download or otherwise export or re-export any underlying\nsoftware, technology or other information from the Products except as stated\nexplicitly in this notice or the Commercial License Agreement and in full\ncompliance with all applicable national and international laws and\nregulations. You agree to indemnify and hold harmless and defend Software AG\nagainst any and all liability arising from or relating to your breach of these\nexport control undertakings.  Software AG reserves the right not to honor any\naffected parts of this notice, or the Commercial License Agreement, in case\nany national or international export regulations or foreign trade legislation,\nor any target country / customer / usage restrictions implied by embargos or\nother sanctions prohibit the provision of export controlled goods\n(Dual-Use items) and services to be granted to you under either this notice\nor the Commercial License Agreement. Software AG may inform you if a related\nofficial export approval by national or international export control\nauthorities is required. Provision of affected Products will then be postponed\nuntil all such required approvals have been granted. The provision of Products\nnot restricted by the above mentioned export prohibitions will remain unaffected\nof this restriction.", 
            "title": "PART B: ADDITIONAL TERMS COMMERCIAL LICENSE"
        }, 
        {
            "location": "/About/License/index.html#part-c-not-applicable", 
            "text": "", 
            "title": "PART C: NOT APPLICABLE"
        }, 
        {
            "location": "/About/License/index.html#part-d-software-ag-evaluation-license-agreement-for-trial-versions-of-software-ag-product-only", 
            "text": "IMPORTANT: PLEASE READ THIS SOFTWARE AG EVALUATION LICENSE AGREEMENT CAREFULLY\nBEFORE INSTALLING THE PRODUCT! THE TERMS OF THIS EVALUATION LICENSE AGREEMENT\nAPPLY ONLY IF YOU HAVE NOT ALREADY EXECUTED A COMMERCIAL LICENSE AGREEMENT FOR\nTHE PRODUCT WITH A SOFTWARE AG SUBSIDIARY OR DISTRIBUTOR.  EVALUATION LICENSE AGREEMENT FOR TRIAL VERSION\nBy installing the Product, you, as licensee, are entering into an agreement\nwith Software AG, as licensor, with GENERAL TERMS as defined in Part A, as\nwell as with terms set forth below (Part D). In case of conflicting terms\nbetween Part A and D, the terms of this Part D shall apply (\"Evaluation)\nLicense Agreement\"). If you do not agree to the terms of this agreement,\nyou must immediately, and in any case before installation, destroy the\nProduct and all copies of the Product in physical, electronic or other form.  THE LICENSE\nWith this Evaluation License Agreement, Software AG grants you - free of charge\n- a non-exclusive license to use the Product and accompanying documentation on\na single computer, on a workstation or on a single terminal within a network\nfor evaluation and testing purposes for a time period defined below (see\nsection License Validity). In no event may the Product be deployed or used\nfor any commercial production purpose such as developing new applications or\ntesting, supporting, maintaining, or reengineering of existing applications,\nunless you acquire a commercial license from Software AG and pay the applicable\nlicense fees. You may not pass on copies of the Product to any third party or\ntransfer the Product by electronic means to other computers via a network. For\nmulti-user hardware systems or networks, a separate license is required for\neach user or each workstation. You have the right to make one copy of the\nProduct solely for archival and backup purposes. You may not decompile,\ndisassemble, modify, decrypt, extract or otherwise reverse engineer, or\nmake further copies of the Product or parts thereof. This Evaluation License\nAgreement, with the downloaded or otherwise provided and used authorization\nkey, is proof of your entering into this agreement and you must retain it. This\nEvaluation License Agreement does not grant you the right to sublicense,\ntransfer, rent, assign or lease the Product, in whole or in part.  THIRD PARTY RESTRICTIONS\nThe Software may contain or include software applications for which the\nLicensor itself had to acquire a license to use from a third party\n(\"Third Party Applications\"). These Third Party Applications may be subject\nto additional license terms (\"Third Party Terms\"), which are available under\nthe web address http://documentation.softwareag.com/legal/thirdparty.htm.\nThe third party shall be entitled - only in relation to the respective\nthird-party software - to exercise the rights of Licensor under this Evaluation\nLicense Agreement as a third party beneficiary directly against the licensee.\nYou may not use or distribute these third party applications or its APIs on a \nstand-alone basis without the Product nor attempt to alter or modify it.    LICENSE VALIDITY\nThis Evaluation License Agreement is limited to a period\nas defined in the license key file. The license might\nlimit your use of the Product to certain features, platforms or restrictions\nin capacity or other limitations incorporated by default, by license key\nfile. You accept these limitations and will in no event bypass these.  COPYRIGHT\nSoftware AG or its affiliates are the sole owner of the industrial property\nrights and copyright to the Product and accompanying user documentation or\nhave the respective distribution rights. References made in or on the Product\nto the copyright or to other industrial property rights must not be altered,\ndeleted or obliterated in any manner.  CONFIDENTIALITY\nThe Product is confidential and proprietary information of Software AG and\nits licensors, and may not be disclosed to third parties. You shall use\nsuch information only for the purpose of exercising the Evaluation License\nAgreement to the Product and shall disclose confidential and proprietary\ninformation only to your employees who require such information for the\npurpose stated above. You agree to take adequate steps to protect the Product\nfrom unauthorized disclosure or use.  LIMITED WARRANTY\nThe Product is provided \"as is\" without any warranty whatsoever. You\nassume full responsibility for the selection of the Product to achieve your\nintended results and for the installation, use and results obtained from\nthe Product. Any kind of support for the Software AG Product is explicitly\nexcluded.  UPDATES AND MAINTENANCE\nThis Evaluation License Agreement does not grant you any right to, license\nfor or interest in any improvements, modifications, enhancements or updates\nto the Product and documentation or other support services. Such services\nare typically available under a Commercial License Agreement only. Any such\narrangements shall be the subject of a separate written agreement.  LIMITATION OF LIABILITY\nExcept where there is a mandatory statutory liability for intent, gross \nnegligence or injury to life, body or health, under no circumstances shall \nSoftware AG or its licensors be liable for any damages whatsoever (including,\nwithout limitation, damages for loss of business profits, work stoppage, loss\nof data or other financial loss) arising from the use of, or inability to use,\nthis Product. In no event shall any liability of Software AG arising out of \nthis agreement exceed the amount paid, if any, by you to Software AG hereunder.  TERMINATION\nThis Evaluation License Agreement will terminate immediately without notice\nfrom Software AG if you fail to comply with any provision of this Evaluation\nLicense Agreement. Software AG reserves the right to terminate this agreement\nimmediately for good cause, whereby good cause is understood as any gross\nbreach of this agreement. Upon termination, you must immediately discontinue\nthe use of the Product and destroy the Product and all copies of the Product\nin physical, electronic or other form. Upon request of Software AG licensee will \ncertify in written that use is discontinued and all copies of the Product are \ndestroyed.    EXPORT\nYou may not download or otherwise export or re-export any underlying\nsoftware, technology or other information from the Products except as stated\nexplicitly in this notice or the Commercial License Agreement and in full\ncompliance with all applicable national and international laws and\nregulations. You agree to indemnify and hold harmless and defend Software AG\nagainst any and all liability arising from or relating to your breach of these\nexport control undertakings.  Software AG reserves the right not to honor any\naffected parts of this notice, or the Commercial License Agreement, in case\nany national or international export regulations or foreign trade legislation,\nor any target country / customer / usage restrictions implied by embargos or\nother sanctions prohibit the provision of export controlled goods\n(Dual-Use items) and services to be granted to you under either this notice\nor the Commercial License Agreement. Software AG may inform you if a related\nofficial export approval by national or international export control\nauthorities is required. Provision of affected Products will then be postponed\nuntil all such required approvals have been granted. The provision of Products\nnot restricted by the above mentioned export prohibitions will remain unaffected\nof this restriction.  MISCELLANEOUS\nThe Product is designed for general office use. It is not designed or\nintended for use in air traffic control, mass transit systems, critical\nmedical purposes, the operation of nuclear facilities or any other use which\ncould result in a high risk of safety or property damage. You warrant that\nyou will not use the Product for such purposes.  The invalidity of any provision of this agreement shall not affect any other\npart of this agreement. This agreement represents the complete and exclusive\nstatement concerning this Evaluation License Agreement between the parties. No\nmodification or amendment of this agreement will be binding on any party\nunless acknowledged in writing by their duly authorized representatives. This\nagreement shall be governed and construed by the laws of the Federal Republic\nof Germany.", 
            "title": "PART D: SOFTWARE AG EVALUATION LICENSE AGREEMENT FOR TRIAL VERSIONS OF SOFTWARE AG PRODUCT ONLY"
        }, 
        {
            "location": "/About/License/index.html#included-projects", 
            "text": "Themes used under license from the ReadTheDocs projects.   ReadTheDocs theme -  View license .   Many thanks to the authors and contributors of those wonderful projects.", 
            "title": "Included Projects"
        }, 
        {
            "location": "/About/License/index.html#mkdocs-license-bsd", 
            "text": "Copyright \u00a9 2014, Tom Christie. All rights reserved.  Redistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:  Redistributions of source code must retain the above copyright notice, this list\nof conditions and the following disclaimer. Redistributions in binary form must\nreproduce the above copyright notice, this list of conditions and the following\ndisclaimer in the documentatio and/or other materials provided with the\ndistribution.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.", 
            "title": "MkDocs License (BSD)"
        }, 
        {
            "location": "/About/License/index.html#chartjsorg-mit", 
            "text": "The MIT License (MIT) -  View license .   Copyright (c) 2018 Chart.js Contributors  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", 
            "title": "ChartJS.org (MIT)"
        }, 
        {
            "location": "/About/Release Notes/index.html", 
            "text": "Release Notes\n\n\nVersion 6.0.1 (2018-06-06)\n\n\n\n\nBUGFIX: Resolved multi-package review issues with the additive nature of per package configuration files (#361 / IR150003)\n\n\nBUGFIX: Resolved per package config discovery issues when running from eclipse (#361 / IR150003)\n\n\n\n\nVersion 6.0.0 (2018-05-15)\n\n\n\n\nImplemented Remote Review Support for Cenralized Devleopment (#345)\n\n\nUpdated Multi report to include REST Descriptor (#344)\n\n\nAdded REST Descriptor support (#342/#343)\n\n\nBUGFIX: Fixed issues with OData/Map services (#340/#341)\n\n\nAdded parser for map servers (#339)\n\n\nAdded Sensor information for map services (#338)\n\n\nAdded Map Service asset support (#336/#337)\n\n\nAdded OData Asset support (#335)\n\n\nAdded Collection Type (#334)\n\n\nJUnit Report - removed warnings so only failures contribute to metrics (#333)\n\n\nBUGFIX: Resolved Links in multipackage review report (#332 / IR149733)\n\n\nBUGFIX: Multipackage review - overall end status correction (#331 / IR149840)\n\n\nMultipackage review - implement per package config (#330 / IR149840)\n\n\nBUGFIX: Resolve Linux Path Issues (#328/#329)\n\n\n\n\nVersion 5.0.0 (2017-07-21)\n\n\n\n\nAdded Linux runner (#327)\n\n\nBUGFIX: Fixed root path issue (#322)\n\n\nRemoved report output setting (#308)\n\n\nAdded support for multi package checking (#302)\n\n\nBUGFIX: Fixed connection checker (#301)\n\n\nUpdated deprecated services (#297)\n\n\nAdded customisable renderer implemention + JUnit render (#292)\n\n\n\n\nVersion 4.0.2 (2017-06-01)\n\n\n\n\nBeta Mult-package review (#285)\n\n\nImplemented Deprecated Service Rules (#284)\n\n\nAllow log name to be changed via system property (#283)\n\n\n\n\nVersion 4.0.1 (2017-05-22)\n\n\n\n\nOption to append date to generated reports (#282)\n\n\nBUGFIX: Fixed exit code issue (#280)\n\n\n\n\nVersion 4.0.0 (2017-04-18)\n\n\n\n\nAddition of exclusion lists (#273/#266)\n\n\nAdded PRT Exclusions (#265)\n\n\nBUGFIX: Fixed pipeline issue where value is set to 0 (#263)\n\n\nAdded FQ22 (#260)\n\n\nAdded FQ16,17,18,19,20 (#257)\n\n\nAdded v9.9 Deprecations (#256)\n\n\nThreaded invoke of rules (#253)\n\n\nAdded Full support for eclipse plugin (#228)", 
            "title": "Release Notes"
        }, 
        {
            "location": "/About/Release Notes/index.html#release-notes", 
            "text": "", 
            "title": "Release Notes"
        }, 
        {
            "location": "/About/Release Notes/index.html#version-601-2018-06-06", 
            "text": "BUGFIX: Resolved multi-package review issues with the additive nature of per package configuration files (#361 / IR150003)  BUGFIX: Resolved per package config discovery issues when running from eclipse (#361 / IR150003)", 
            "title": "Version 6.0.1 (2018-06-06)"
        }, 
        {
            "location": "/About/Release Notes/index.html#version-600-2018-05-15", 
            "text": "Implemented Remote Review Support for Cenralized Devleopment (#345)  Updated Multi report to include REST Descriptor (#344)  Added REST Descriptor support (#342/#343)  BUGFIX: Fixed issues with OData/Map services (#340/#341)  Added parser for map servers (#339)  Added Sensor information for map services (#338)  Added Map Service asset support (#336/#337)  Added OData Asset support (#335)  Added Collection Type (#334)  JUnit Report - removed warnings so only failures contribute to metrics (#333)  BUGFIX: Resolved Links in multipackage review report (#332 / IR149733)  BUGFIX: Multipackage review - overall end status correction (#331 / IR149840)  Multipackage review - implement per package config (#330 / IR149840)  BUGFIX: Resolve Linux Path Issues (#328/#329)", 
            "title": "Version 6.0.0 (2018-05-15)"
        }, 
        {
            "location": "/About/Release Notes/index.html#version-500-2017-07-21", 
            "text": "Added Linux runner (#327)  BUGFIX: Fixed root path issue (#322)  Removed report output setting (#308)  Added support for multi package checking (#302)  BUGFIX: Fixed connection checker (#301)  Updated deprecated services (#297)  Added customisable renderer implemention + JUnit render (#292)", 
            "title": "Version 5.0.0 (2017-07-21)"
        }, 
        {
            "location": "/About/Release Notes/index.html#version-402-2017-06-01", 
            "text": "Beta Mult-package review (#285)  Implemented Deprecated Service Rules (#284)  Allow log name to be changed via system property (#283)", 
            "title": "Version 4.0.2 (2017-06-01)"
        }, 
        {
            "location": "/About/Release Notes/index.html#version-401-2017-05-22", 
            "text": "Option to append date to generated reports (#282)  BUGFIX: Fixed exit code issue (#280)", 
            "title": "Version 4.0.1 (2017-05-22)"
        }, 
        {
            "location": "/About/Release Notes/index.html#version-400-2017-04-18", 
            "text": "Addition of exclusion lists (#273/#266)  Added PRT Exclusions (#265)  BUGFIX: Fixed pipeline issue where value is set to 0 (#263)  Added FQ22 (#260)  Added FQ16,17,18,19,20 (#257)  Added v9.9 Deprecations (#256)  Threaded invoke of rules (#253)  Added Full support for eclipse plugin (#228)", 
            "title": "Version 4.0.0 (2017-04-18)"
        }, 
        {
            "location": "/Developers/API Documentation/index.html", 
            "text": "API Documentation\n\n\nThe Integration Server Continuous Code Review API is used when you want to build new operations, sensors or decerators.\nThe API documentation can be found\n\nhere", 
            "title": "API Documentation"
        }, 
        {
            "location": "/Developers/API Documentation/index.html#api-documentation", 
            "text": "The Integration Server Continuous Code Review API is used when you want to build new operations, sensors or decerators.\nThe API documentation can be found here", 
            "title": "API Documentation"
        }, 
        {
            "location": "/Developers/Adding New Decorators/index.html", 
            "text": "Adding new Decorators\n\n\n\n\nWarning\n\n\nThis section requires extensive java skills\n\n\n\n\nA sensor that records metrics can also have a number of \u2018decorators\u2019 assigned.  Decorators sole purpose are to aggregate and analyse metrics within the sensor recordings to be able to provide deep understanding and analysis across the reviewed code.\n\n\nAdding a New Decorator\n\n\nTo add a new decorator, you need to do two things\n\n\n\n\nImplement and compile a java class that extends the Abstract \u2018Decorator\u2019 class to perform the operation required\n\n\nAdd the decorator to a sensor within the configuration XML file\n\n\n\n\nImplementing the Decorator Class\n\n\nWithin the distribution, a sample decorator is provided within the src directory \u2013 \nSampleDecorator.java\n\nYou can use this as a template for building additional decorators.\nEach new decorator MUST extend the \ncom.softwareag.gcs.wm.codereview.decorators.Decorator\n abstract class, and therefore implement the \ndecorate\n method as follows:\n\n\npackage com.softwareag.gcs.wm.codereview.decorators;\n\nimport java.util.List;\nimport com.softwareag.gcs.wm.codereview.configuration.bindings.ResultsType;\n\npublic class SampleDecorator extends Decorator\n{\n\n    /**\n     * Decorate the sensor readings\n     */\n    public void decorate()\n    {\n    //Get sensor results\n    List\nResultsType\n results = this.getResults();\n\n    //save mesaure as per the sensor\n    this.saveMeasure(\npi\n, \nSampleDecorator\n, \n3.142\n);\n    }\n\n}\n\n\n\n\nThe decorator class provides a number of useful functions you might need to implement your new decorator, such as retrieving sensor recorded values, and as with the operation additional provided utility classes can be used or added to supplement your decorator functionality.\n\n\nBuilding the Decorator Class\n\n\nAn ANT script is available to build any custom operations, sensors or decorators.  This can be found within the distribution directory and can be run as follows\n\n\nant -f build-custom-classes.xml\n\n\nThis will run the build of any custom operations, sensors and decorators within the src directory\nThe compiled class with be placed within the classes folder and will then be subsequently available to the ISCCR tool.\n\n\n\n\nNote\n\n\nif you use additional libraries in your custom operation, you\u2019ll need to modify the build-operations ant script to include these, and modify the script that starts the CodeReview to include the additional jar files.\n\n\n\n\nAdding the configuration entries\n\n\nNext edit the configuration XML that will be used for the code review to include the decorator within the relevant sensor, e.g.\n\n\nsensor\n\n  \ndefinition sensorName=\nSampleSensor\n sensorClass=\ncom.softwareag.gcs.wm.codereview.sensors.SampleSensor\n\n  \ndecorator name=\nFlowTotals\n class=\ncom.softwareag.gcs.wm.codereview.decorators.SummaryTotals\n/\n  \n  \n/definition\n\n\n/sensor\n\n\n\n\n\n11.1.4. Running the Decorator\nOn the next execution of the code review, your decorator will be executed following execution of the sensor.", 
            "title": "Adding new Decorators"
        }, 
        {
            "location": "/Developers/Adding New Decorators/index.html#adding-new-decorators", 
            "text": "Warning  This section requires extensive java skills   A sensor that records metrics can also have a number of \u2018decorators\u2019 assigned.  Decorators sole purpose are to aggregate and analyse metrics within the sensor recordings to be able to provide deep understanding and analysis across the reviewed code.", 
            "title": "Adding new Decorators"
        }, 
        {
            "location": "/Developers/Adding New Decorators/index.html#adding-a-new-decorator", 
            "text": "To add a new decorator, you need to do two things   Implement and compile a java class that extends the Abstract \u2018Decorator\u2019 class to perform the operation required  Add the decorator to a sensor within the configuration XML file", 
            "title": "Adding a New Decorator"
        }, 
        {
            "location": "/Developers/Adding New Decorators/index.html#implementing-the-decorator-class", 
            "text": "Within the distribution, a sample decorator is provided within the src directory \u2013  SampleDecorator.java \nYou can use this as a template for building additional decorators.\nEach new decorator MUST extend the  com.softwareag.gcs.wm.codereview.decorators.Decorator  abstract class, and therefore implement the  decorate  method as follows:  package com.softwareag.gcs.wm.codereview.decorators;\n\nimport java.util.List;\nimport com.softwareag.gcs.wm.codereview.configuration.bindings.ResultsType;\n\npublic class SampleDecorator extends Decorator\n{\n\n    /**\n     * Decorate the sensor readings\n     */\n    public void decorate()\n    {\n    //Get sensor results\n    List ResultsType  results = this.getResults();\n\n    //save mesaure as per the sensor\n    this.saveMeasure( pi ,  SampleDecorator ,  3.142 );\n    }\n\n}  The decorator class provides a number of useful functions you might need to implement your new decorator, such as retrieving sensor recorded values, and as with the operation additional provided utility classes can be used or added to supplement your decorator functionality.", 
            "title": "Implementing the Decorator Class"
        }, 
        {
            "location": "/Developers/Adding New Decorators/index.html#building-the-decorator-class", 
            "text": "An ANT script is available to build any custom operations, sensors or decorators.  This can be found within the distribution directory and can be run as follows  ant -f build-custom-classes.xml  This will run the build of any custom operations, sensors and decorators within the src directory\nThe compiled class with be placed within the classes folder and will then be subsequently available to the ISCCR tool.   Note  if you use additional libraries in your custom operation, you\u2019ll need to modify the build-operations ant script to include these, and modify the script that starts the CodeReview to include the additional jar files.", 
            "title": "Building the Decorator Class"
        }, 
        {
            "location": "/Developers/Adding New Decorators/index.html#adding-the-configuration-entries", 
            "text": "Next edit the configuration XML that will be used for the code review to include the decorator within the relevant sensor, e.g.  sensor \n   definition sensorName= SampleSensor  sensorClass= com.softwareag.gcs.wm.codereview.sensors.SampleSensor \n   decorator name= FlowTotals  class= com.softwareag.gcs.wm.codereview.decorators.SummaryTotals /   \n   /definition  /sensor   11.1.4. Running the Decorator\nOn the next execution of the code review, your decorator will be executed following execution of the sensor.", 
            "title": "Adding the configuration entries"
        }, 
        {
            "location": "/Developers/Adding New Operations/index.html", 
            "text": "Adding New Operations\n\n\nISCCR can be extended with you own checks, either making use of the already implemented operation classes, or by implementing your own operation.  This section describes how to build a custom operation, compile and use.  There is additional Javadoc documentation distributed with ISCCR to describe the methods that you can use during extension development.\n\n\nAdditional Operations Using exsting implementation methods\n\n\nCache Check using the existing Service Property implementation\n\n\nLet\u2019s create a new code check to ensure caching is enabled \u2013 perhaps as an example we have a configuration package that should always have the cache enabled rather than retrieving the config entries from the file each time.\nThe cache option exists in the \nnode.ndf\n file and looks like:\n\n\nvalue name=\ncaching\nno\n/value\n\n\n\n\n\nWhere the value can be yes or no.\n\n\nTo achieve this as a check we can want to use the ServiceProperties operation class, and can add a config entry as follows:\n\n\ncheck id=\nMY1\n name=\nCache Enabled\n enabled=\ntrue\n ignoreFailure=\ntrue\n\n\ndescription\nService cache should be enabled\n/description\n\n    \nimplementation\n\n        \nclass\ncom.softwareag.gcs.wm.codereview.operations.ServiceProperties\n/class\n\n        \nparameters\n\n            \nparameter\ncaching\n/parameter\n\n            \nparameter\nyes\n/parameter\n\n        \n/parameters\n\n    \n/implementation\n\n\n/check\n\n\n\n\n\n\n\nNote\n\n\nThe check id must be unique.\n\n\n\n\nInvoke Comment Check Using the existing XPath implementation\n\n\nLet\u2019s create a new flow check.  Perhaps we have a coding standard where every service invocation should have an associated comment and we want to review this to ensure comments are provided.\ni\nThe flow code lives in the flow XML file that the XPath Operation works against\n\n\nIn this file, you can see an invoke with a comment looks as follows:\n\n\nINVOKE TIMEOUT=\n SERVICE=\npub.math:addInts\n VALIDATE-IN=\n$none\n VALIDATE-OUT=\n$none\n\n  \nCOMMENT\nA comment against an invoke\n/COMMENT\n\n \u2026\n\n/INVOKE\n\n\n\n\n\nTherefore an XPath statement to check whether a comment has been entered or not can be constructed as follows:\n\ncount(//INVOKE[string-length(COMMENT)=0])!=0\n\n\nThis counts all the invokes where the comment length is zero, and if the count is not zero, will return false, otherwise if the count is zero, it will return true, i.e. every invoke has a comment.\n\n\nTo achieve this as a check we can add a config entry as follows:\n\n\ncheck id=\nCUSTOM1\n name=\nService invoke comments\n enabled=\ntrue\n ignoreFailure=\ntrue\n\n  \ndescription\nAll service Invokes should have a comment\n/description\n\n  \nimplementation\n\n     \nclass\ncom.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker\n/class\n\n     \nparameters\n\n         \nparameter\ncount(//INVOKE) = count(//INVOKE[string-length(COMMENT)=0])\n/parameter\n\n     \n/parameters\n\n  \n/implementation\n\n\n/check\n\n\n\n\n\n\n\nNote\n\n\nAs previously this rule also has the ignoreFailure flag set to true, this means that if the rule does fail, it won\u2019t abort the CI build process.\n\n\n\n\nAdding a new operation implementation\n\n\n\n\nWarning\n\n\nThe following sections requires extensive java skills\n\n\n\n\nTo add a new operation, you need to do two things\n\n\n\n\nImplement and compile a java class that extends the Abstract \u2018Operation\u2019 class to perform the operation required\n\n\nAdd a new check to the configuration XML file that uses your new operation and provides any required parameters.\n\n\n\n\nImplementing the Operation Class\n\n\nWithin the distribution, a sample operation is provided within the src directory \u2013 SampleOperation.java\nYou can use this as a template for building additional operations.\n\n\nEach new operation MUST extend the \ncom.softwareag.gcs.wm.codereview.operations.Operation\n abstract class, and therefore implement the \nperformCheckOperation\n method as follows:\n\n\npackage com.softwareag.gcs.wm.codereview.operations;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport com.softwareag.gcs.wm.codereview.utils.FlowUtilities;\n\npublic class SampleOperation extends com.softwareag.gcs.wm.codereview.operations.Operation\n{\n\n    /**\n     * Performs the code review check item\n     */\n    @Override\n    public void performCheckOperation()\n    {\n\n    }\n}\n\n\n\n\nIt\u2019s also worthwhile changing the log level in the XML file to \nTRACCE\n  and use the \nLogWriter\n within your operation to output log information \n\n\nThe Operation class provides a number of useful functions you might need to implement your new code review operation.\n\n\nAlso there are a number of utility functions provided within the package \ncom.softwareag.gcs.wm.codereview.utils\n which are provided to simplify development of additional operations.\n\n\nThese are fully documented as java-doc documentation and can be found in the \u2018docs/api\u2019 directory of the distribution.\n\n\nThe sample operation provided performs a number of tasks to demonstrate how you might want to build an operation.  This Sample Operation as implemented checks that for every flow xml file, there should be a node NDF file.  This should always be the case, however it serves as a good demonstration.\n\n\nThe tasks this performs are:\n\n\n\n\nValidate Parameters\n\n\nGet the List of Node NDF files\n\n\nGet the List of Flow Service Files\n\n\nAssert the test (i.e. Is there a NODE file for a FLOW XML file)\n\n\nAdd the test to the results list\n\n\n\n\nFor any test, you must add the test to the result using a call similar to:\n\n\nthis.addTestResults(assertion, fullServiceName, result);\n\n\n\n\nYou can create a main method in your operation (as demonstrated in the SampleOperation) so you can test the operation outside of the Code Review tool to enable you to debug this within your IDE.\n\n\nBuilding the New Operation Class\n\n\nAn ANT script is available to build any custom operations, sensors or decorators.  This can be found within the distribution directory and can be run as follows\n\n\nant -f build-custom-classes.xml\n\n\nThis will run the build of any custom operations, sensors and decorators within the src directory and will show a result similar to:\n\n\nBuildfile: C:\\SoftwareAG\\tools\\CodeReview\\build-custom-classes.xml\n\nclean:\n   [delete] Deleting directory C:\\SoftwareAG\\tools\\CodeReview\\classes\\com\\softwareag\\gcs\\wm\\codereview\\operations\n\ncompile:\n    [javac] C:\\SoftwareAG\\tools\\CodeReview\\build-operations.xml:9: warning: 'includeantruntime' was not set, defaulting to build.sysclassp\nath=last; set to false for repeatable builds\n    [javac] Compiling 1 source file to C:\\SoftwareAG\\tools\\CodeReview\\classes\n\nbuild:\n\nBUILD SUCCESSFUL\nTotal time: 1 second\n\n\n\n\nThe compiled class with be placed within the classes folder and will then be subsequently available to the ISCCR tool.\n\n\n\n\nNote\n\n\nif you use additional libraries in your custom operation, you\u2019ll need to modify the build-operations ant script to include these, and modify the script that starts the CodeReview to include the additional jar files.\n\n\n\n\nAdding the configuration entries\n\n\nNext edit the configuration XML that will be used for the code review to include the check, e.g.\n\n\ncheck id=\nMY2\n name=\nSample Operation\n enabled=\ntrue\n ignoreFailure=\nfalse\n\n  \ndescription\nSample Operation\n/description\n\n  \nimplementation\n\n    \nclass\ncom.softwareag.gcs.wm.codereview.operations.SampleOperation\n/class\n\n    \nparameters\n\n      \nparameter\nMyParam1\n/parameter\n\n      \nparameter\nMyParam2\n/parameter\n\n    \n/parameters\n\n  \n/implementation\n\n\n/check\n\n\n\n\n\nRunning the Operation\n\n\nOn the next execution of the code review, your operation will be executed.", 
            "title": "Adding New Operations"
        }, 
        {
            "location": "/Developers/Adding New Operations/index.html#adding-new-operations", 
            "text": "ISCCR can be extended with you own checks, either making use of the already implemented operation classes, or by implementing your own operation.  This section describes how to build a custom operation, compile and use.  There is additional Javadoc documentation distributed with ISCCR to describe the methods that you can use during extension development.", 
            "title": "Adding New Operations"
        }, 
        {
            "location": "/Developers/Adding New Operations/index.html#additional-operations-using-exsting-implementation-methods", 
            "text": "", 
            "title": "Additional Operations Using exsting implementation methods"
        }, 
        {
            "location": "/Developers/Adding New Operations/index.html#cache-check-using-the-existing-service-property-implementation", 
            "text": "Let\u2019s create a new code check to ensure caching is enabled \u2013 perhaps as an example we have a configuration package that should always have the cache enabled rather than retrieving the config entries from the file each time.\nThe cache option exists in the  node.ndf  file and looks like:  value name= caching no /value   Where the value can be yes or no.  To achieve this as a check we can want to use the ServiceProperties operation class, and can add a config entry as follows:  check id= MY1  name= Cache Enabled  enabled= true  ignoreFailure= true  description Service cache should be enabled /description \n     implementation \n         class com.softwareag.gcs.wm.codereview.operations.ServiceProperties /class \n         parameters \n             parameter caching /parameter \n             parameter yes /parameter \n         /parameters \n     /implementation  /check    Note  The check id must be unique.", 
            "title": "Cache Check using the existing Service Property implementation"
        }, 
        {
            "location": "/Developers/Adding New Operations/index.html#invoke-comment-check-using-the-existing-xpath-implementation", 
            "text": "Let\u2019s create a new flow check.  Perhaps we have a coding standard where every service invocation should have an associated comment and we want to review this to ensure comments are provided.\ni\nThe flow code lives in the flow XML file that the XPath Operation works against  In this file, you can see an invoke with a comment looks as follows:  INVOKE TIMEOUT=  SERVICE= pub.math:addInts  VALIDATE-IN= $none  VALIDATE-OUT= $none \n   COMMENT A comment against an invoke /COMMENT \n \u2026 /INVOKE   Therefore an XPath statement to check whether a comment has been entered or not can be constructed as follows: count(//INVOKE[string-length(COMMENT)=0])!=0  This counts all the invokes where the comment length is zero, and if the count is not zero, will return false, otherwise if the count is zero, it will return true, i.e. every invoke has a comment.  To achieve this as a check we can add a config entry as follows:  check id= CUSTOM1  name= Service invoke comments  enabled= true  ignoreFailure= true \n   description All service Invokes should have a comment /description \n   implementation \n      class com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker /class \n      parameters \n          parameter count(//INVOKE) = count(//INVOKE[string-length(COMMENT)=0]) /parameter \n      /parameters \n   /implementation  /check    Note  As previously this rule also has the ignoreFailure flag set to true, this means that if the rule does fail, it won\u2019t abort the CI build process.", 
            "title": "Invoke Comment Check Using the existing XPath implementation"
        }, 
        {
            "location": "/Developers/Adding New Operations/index.html#adding-a-new-operation-implementation", 
            "text": "Warning  The following sections requires extensive java skills   To add a new operation, you need to do two things   Implement and compile a java class that extends the Abstract \u2018Operation\u2019 class to perform the operation required  Add a new check to the configuration XML file that uses your new operation and provides any required parameters.", 
            "title": "Adding a new operation implementation"
        }, 
        {
            "location": "/Developers/Adding New Operations/index.html#implementing-the-operation-class", 
            "text": "Within the distribution, a sample operation is provided within the src directory \u2013 SampleOperation.java\nYou can use this as a template for building additional operations.  Each new operation MUST extend the  com.softwareag.gcs.wm.codereview.operations.Operation  abstract class, and therefore implement the  performCheckOperation  method as follows:  package com.softwareag.gcs.wm.codereview.operations;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport com.softwareag.gcs.wm.codereview.utils.FlowUtilities;\n\npublic class SampleOperation extends com.softwareag.gcs.wm.codereview.operations.Operation\n{\n\n    /**\n     * Performs the code review check item\n     */\n    @Override\n    public void performCheckOperation()\n    {\n\n    }\n}  It\u2019s also worthwhile changing the log level in the XML file to  TRACCE   and use the  LogWriter  within your operation to output log information   The Operation class provides a number of useful functions you might need to implement your new code review operation.  Also there are a number of utility functions provided within the package  com.softwareag.gcs.wm.codereview.utils  which are provided to simplify development of additional operations.  These are fully documented as java-doc documentation and can be found in the \u2018docs/api\u2019 directory of the distribution.  The sample operation provided performs a number of tasks to demonstrate how you might want to build an operation.  This Sample Operation as implemented checks that for every flow xml file, there should be a node NDF file.  This should always be the case, however it serves as a good demonstration.  The tasks this performs are:   Validate Parameters  Get the List of Node NDF files  Get the List of Flow Service Files  Assert the test (i.e. Is there a NODE file for a FLOW XML file)  Add the test to the results list   For any test, you must add the test to the result using a call similar to:  this.addTestResults(assertion, fullServiceName, result);  You can create a main method in your operation (as demonstrated in the SampleOperation) so you can test the operation outside of the Code Review tool to enable you to debug this within your IDE.", 
            "title": "Implementing the Operation Class"
        }, 
        {
            "location": "/Developers/Adding New Operations/index.html#building-the-new-operation-class", 
            "text": "An ANT script is available to build any custom operations, sensors or decorators.  This can be found within the distribution directory and can be run as follows  ant -f build-custom-classes.xml  This will run the build of any custom operations, sensors and decorators within the src directory and will show a result similar to:  Buildfile: C:\\SoftwareAG\\tools\\CodeReview\\build-custom-classes.xml\n\nclean:\n   [delete] Deleting directory C:\\SoftwareAG\\tools\\CodeReview\\classes\\com\\softwareag\\gcs\\wm\\codereview\\operations\n\ncompile:\n    [javac] C:\\SoftwareAG\\tools\\CodeReview\\build-operations.xml:9: warning: 'includeantruntime' was not set, defaulting to build.sysclassp\nath=last; set to false for repeatable builds\n    [javac] Compiling 1 source file to C:\\SoftwareAG\\tools\\CodeReview\\classes\n\nbuild:\n\nBUILD SUCCESSFUL\nTotal time: 1 second  The compiled class with be placed within the classes folder and will then be subsequently available to the ISCCR tool.   Note  if you use additional libraries in your custom operation, you\u2019ll need to modify the build-operations ant script to include these, and modify the script that starts the CodeReview to include the additional jar files.", 
            "title": "Building the New Operation Class"
        }, 
        {
            "location": "/Developers/Adding New Operations/index.html#adding-the-configuration-entries", 
            "text": "Next edit the configuration XML that will be used for the code review to include the check, e.g.  check id= MY2  name= Sample Operation  enabled= true  ignoreFailure= false \n   description Sample Operation /description \n   implementation \n     class com.softwareag.gcs.wm.codereview.operations.SampleOperation /class \n     parameters \n       parameter MyParam1 /parameter \n       parameter MyParam2 /parameter \n     /parameters \n   /implementation  /check", 
            "title": "Adding the configuration entries"
        }, 
        {
            "location": "/Developers/Adding New Operations/index.html#running-the-operation", 
            "text": "On the next execution of the code review, your operation will be executed.", 
            "title": "Running the Operation"
        }, 
        {
            "location": "/Developers/Adding New Reports/index.html", 
            "text": "Adding New Reports\n\n\nReport Customisation via XSL\n\n\nThe report is generated using an XSL, and therefore this can be modified to generate a report in any format you need.\nOn execution of a code review, an XML file is written to the file system.\n\nThis XML file can be used as sample data to the XSL during development.\nThe report makes use of chart.js \nhttp://www.chartjs.org/\n to display charts.  The chart.js functions are embedded within the HTML at runtime in order to allow the HTML to be standalone.  If you create a custom XSL and would like the chart.js to be embedded, ensure that as part of the XSL, you provide the following comment: \n\n\nxsl:comment\nINSERT_CHART.JS\n/xsl:comment\n\n\n\n\n\nas this will be used to determine the insertion point of the chart.js functions.\n\n\nAdding New Renderer\n\n\nOnce a new report is created, this can be added to the configuration as a new renderer entry as follows\n\n\nrenderer name=\nnew-html-package\n class=\ncom.softwareag.gcs.wm.codereview.renderers.XSLRenderer\n scope=\nsingle\n\n  \nparameters\n\n    \nparameter\nMyNewGenerateReport.xsl\n/parameter\n\n    \nparameter\n%code.review.output.directory%\n/parameter\n\n    \nparameter\n%code.review.output.preserve%\n/parameter\n\n    \nparameter\nhtml\n/parameter\n\n  \n/parameters\n\n\n/renderer", 
            "title": "Adding New Reports"
        }, 
        {
            "location": "/Developers/Adding New Reports/index.html#adding-new-reports", 
            "text": "", 
            "title": "Adding New Reports"
        }, 
        {
            "location": "/Developers/Adding New Reports/index.html#report-customisation-via-xsl", 
            "text": "The report is generated using an XSL, and therefore this can be modified to generate a report in any format you need.\nOn execution of a code review, an XML file is written to the file system. \nThis XML file can be used as sample data to the XSL during development.\nThe report makes use of chart.js  http://www.chartjs.org/  to display charts.  The chart.js functions are embedded within the HTML at runtime in order to allow the HTML to be standalone.  If you create a custom XSL and would like the chart.js to be embedded, ensure that as part of the XSL, you provide the following comment:   xsl:comment INSERT_CHART.JS /xsl:comment   as this will be used to determine the insertion point of the chart.js functions.", 
            "title": "Report Customisation via XSL"
        }, 
        {
            "location": "/Developers/Adding New Reports/index.html#adding-new-renderer", 
            "text": "Once a new report is created, this can be added to the configuration as a new renderer entry as follows  renderer name= new-html-package  class= com.softwareag.gcs.wm.codereview.renderers.XSLRenderer  scope= single \n   parameters \n     parameter MyNewGenerateReport.xsl /parameter \n     parameter %code.review.output.directory% /parameter \n     parameter %code.review.output.preserve% /parameter \n     parameter html /parameter \n   /parameters  /renderer", 
            "title": "Adding New Renderer"
        }, 
        {
            "location": "/Developers/Adding New Sensors/index.html", 
            "text": "Adding New Sensors\n\n\n\n\nWarning\n\n\nThis section requires extensive java skills \n\n\n\n\nSensors allow for the recoding of numeric facts during a review cycle.  This can be as simple as recording the number of items reviewed, or a more complex breakdown of the individual items.\n\n\nAdding a new sensor\n\n\nTo add a new sensor, you need to do two things\n\n\n\n\nImplement and compile a java class that extends the Abstract \u2018Sensor\u2019 class to perform the operation required\n\n\nAdd a new sensor definition to the configuration XML file\n\n\n\n\nImplementing the Sensor Class\n\n\nWithin the distribution, a sample sensor is provided within the src directory \u2013 \nSampleSensor.java\n\nYou can use this as a template for building additional sensors.\nEach new sensor MUST extend the \ncom.softwareag.gcs.wm.codereview.sensors.Sensor\n abstract class, and therefore implement the \nlisten\n method as follows:\n\n\npackage com.softwareag.gcs.wm.codereview.sensors;\n\n/**\n * @author ukDXP\n *\n */\npublic class SampleSensor extends Sensor\n{\n\n    /* (non-Javadoc)\n     * @see com.softwareag.gcs.wm.codereview.sensors.Sensor#listen()\n     */\n    @Override\n    protected void listen()\n    {\n    //example of a sensor measure save\n    this.saveMeasure(\npi\n, \nSampleSensor\n, \n3.142\n);\n    }\n\n}\n\n\n\n\nAs well as \nsaveMeasure\n, you can also use \nsaveGroupMeasure\n, which will create a ResultGroup within the results to collate the sensor recordings within a group.\n\n\nIt\u2019s also worthwhile changing the log level in the XML file to \nTRACE\n, and use the \nLogWriter\n within your operation to output log information.\n\n\nThe Sensor class provides a number of useful functions you might need to implement your new sensor and as with the operation additional provided utility classes can be used or added to supplement your sensor functionality.\n\n\nBuilding the Sensor Class\n\n\nAn ANT script is available to build any custom operations, sensors or decorators.  This can be found within the distribution directory and can be run as follows\n\n\nant -f build-custom-classes.xml\n\n\n\n\nNote\n\n\nif you use additional libraries in your custom classes, you\u2019ll need to modify the build-operations ant script to include these, and modify the script that starts the CodeReview to include the additional jar files.\n\n\n\n\nAdding the configuration entries\n\n\nNext edit the configuration XML that will be used for the code review to include the sensor, e.g.\n\n\nsensor\n\n  \ndefinition sensorName=\nSampleSensor\n sensorClass=\ncom.softwareag.gcs.wm.codereview.sensors.SampleSensor\n\n  \n/definition\n\n\n/sensor\n\n\n\n\n\nRunning the Sensor\n\n\nOn the next execution of the code review, your Sensor will be executed.", 
            "title": "Adding New Sensors"
        }, 
        {
            "location": "/Developers/Adding New Sensors/index.html#adding-new-sensors", 
            "text": "Warning  This section requires extensive java skills    Sensors allow for the recoding of numeric facts during a review cycle.  This can be as simple as recording the number of items reviewed, or a more complex breakdown of the individual items.", 
            "title": "Adding New Sensors"
        }, 
        {
            "location": "/Developers/Adding New Sensors/index.html#adding-a-new-sensor", 
            "text": "To add a new sensor, you need to do two things   Implement and compile a java class that extends the Abstract \u2018Sensor\u2019 class to perform the operation required  Add a new sensor definition to the configuration XML file", 
            "title": "Adding a new sensor"
        }, 
        {
            "location": "/Developers/Adding New Sensors/index.html#implementing-the-sensor-class", 
            "text": "Within the distribution, a sample sensor is provided within the src directory \u2013  SampleSensor.java \nYou can use this as a template for building additional sensors.\nEach new sensor MUST extend the  com.softwareag.gcs.wm.codereview.sensors.Sensor  abstract class, and therefore implement the  listen  method as follows:  package com.softwareag.gcs.wm.codereview.sensors;\n\n/**\n * @author ukDXP\n *\n */\npublic class SampleSensor extends Sensor\n{\n\n    /* (non-Javadoc)\n     * @see com.softwareag.gcs.wm.codereview.sensors.Sensor#listen()\n     */\n    @Override\n    protected void listen()\n    {\n    //example of a sensor measure save\n    this.saveMeasure( pi ,  SampleSensor ,  3.142 );\n    }\n\n}  As well as  saveMeasure , you can also use  saveGroupMeasure , which will create a ResultGroup within the results to collate the sensor recordings within a group.  It\u2019s also worthwhile changing the log level in the XML file to  TRACE , and use the  LogWriter  within your operation to output log information.  The Sensor class provides a number of useful functions you might need to implement your new sensor and as with the operation additional provided utility classes can be used or added to supplement your sensor functionality.", 
            "title": "Implementing the Sensor Class"
        }, 
        {
            "location": "/Developers/Adding New Sensors/index.html#building-the-sensor-class", 
            "text": "An ANT script is available to build any custom operations, sensors or decorators.  This can be found within the distribution directory and can be run as follows  ant -f build-custom-classes.xml   Note  if you use additional libraries in your custom classes, you\u2019ll need to modify the build-operations ant script to include these, and modify the script that starts the CodeReview to include the additional jar files.", 
            "title": "Building the Sensor Class"
        }, 
        {
            "location": "/Developers/Adding New Sensors/index.html#adding-the-configuration-entries", 
            "text": "Next edit the configuration XML that will be used for the code review to include the sensor, e.g.  sensor \n   definition sensorName= SampleSensor  sensorClass= com.softwareag.gcs.wm.codereview.sensors.SampleSensor \n   /definition  /sensor", 
            "title": "Adding the configuration entries"
        }, 
        {
            "location": "/Developers/Adding New Sensors/index.html#running-the-sensor", 
            "text": "On the next execution of the code review, your Sensor will be executed.", 
            "title": "Running the Sensor"
        }, 
        {
            "location": "/Developers/Customising Operations/index.html", 
            "text": "Customising Operations\n\n\nISCCR has a number of code review checks out of the box that you may want to modify based on your review needs.  Those checks in particular that you might want to change are related to the naming standards.  The ones within ISCCR are based on the prime standards; however, if operating this against an established project with different naming conventions you may wish to modify these checks to fit your conventions by creating an override configuration file and modifying the behaviour within this.\n\n\nThe majority of the Naming Standards utilise regular expressions to control the check conditions, e.g\n\n\nNS2 - Folder name\n\nThis uses a regular expression to check the format, i.e.\n\n\n[a-z]{1}[a-z0-9_]*|_{1}[a-z0-9A-Z_]*\n\n\n\n\nThis example means:\n\n\n\n\nThe folder must start with a lowercase a-z character\n\n\nadditionally it must be followed with lowercase a-z or 0-9 or an underscore\n\n\nAlternatively, the folder could start with an _ and then allow a-z, A-Z or 0-9 and underscore\n\n\n\n\nShould your policy be to allow camelCase folder names, you can override this rule in your own configuration file, and replace the regular expression with something that allows for camel case, e.g\n\n\n[a-z]{1}[a-zA-Z0-9_]", 
            "title": "Customising Operations"
        }, 
        {
            "location": "/Developers/Customising Operations/index.html#customising-operations", 
            "text": "ISCCR has a number of code review checks out of the box that you may want to modify based on your review needs.  Those checks in particular that you might want to change are related to the naming standards.  The ones within ISCCR are based on the prime standards; however, if operating this against an established project with different naming conventions you may wish to modify these checks to fit your conventions by creating an override configuration file and modifying the behaviour within this.  The majority of the Naming Standards utilise regular expressions to control the check conditions, e.g  NS2 - Folder name \nThis uses a regular expression to check the format, i.e.  [a-z]{1}[a-z0-9_]*|_{1}[a-z0-9A-Z_]*  This example means:   The folder must start with a lowercase a-z character  additionally it must be followed with lowercase a-z or 0-9 or an underscore  Alternatively, the folder could start with an _ and then allow a-z, A-Z or 0-9 and underscore   Should your policy be to allow camelCase folder names, you can override this rule in your own configuration file, and replace the regular expression with something that allows for camel case, e.g  [a-z]{1}[a-zA-Z0-9_]", 
            "title": "Customising Operations"
        }, 
        {
            "location": "/User Guide/Command Line Options/index.html", 
            "text": "Command Line Options\n\n\nThis section of the documentation details all the available command line options that can be used during the execution of the code review engine. \n\n\ncode.review.pkgname\n\n\n-Dcode.review.pkgname=[PACKAGE NAME]\n\n\n\n\nMANDATORY FOR SINGLE PACKAGE REVIEW\n\n\nThis option is mandatory when performing a single package review  and must be provided, however, This can be excluded on a multi package review\n\n\n\n\nThis option provides the name of the package to be reviewed.  This name \nMUST\n match the exact case as to how the package was created in designer, For Example:\n\n\n-Dcode.review.pgkname=IotDemo\n\n\n\ncode.review.pkgprefix\n\n\n-Dcode.review.pkgprefix=[PREFIX or COMMA SEPARATED LIST OF PREFIXES]\n\n\n\n\nMANDTORY\n\n\nThis option is mandatory and must be provided\n\n\n\n\nThis option provides a prefix of the package, or a list of package prefixes where a multi-package review needs to include packages with different prefixes.  For example:\n\n\n-Dcode.review.pkgprefix=Iot\n\n\n\nor for a multi-package review\n\n\n-Dcode.review.pkgprefix=Iot,Sag,Wx\n\n\n\ncode.review.directory\n\n\n-Dcode.review.directory=[LOCATION OF PACKAGES DIRECTORY]\n\n\n\n\nMANDATORY\n\n\nThis option is mandatory and must be provided\n\n\n\n\nThis option provides the location of the packages directory.  This is normally the location as to where the packages have been checked out of source control, but could also point to the integration server packages directory.  For example:\n\n\n-Dcode.review.directory=c:\\softwareag\\IntegrationServer\\instances\\default\\packages\n\n\n\ncode.review.runmode\n\n\n-Dcode.review.runmode=[MULTI]\n\n\nThis option is option and only required when you want to perform a multi-package review.  In this scenario, you provide the command option as follows:\n\n\n-Dcode.review.runmode=MULTI\n\n\n\n\n\nNote\n\n\nWith a multi package review, the packagename option is not required, and a comma separated list of prefixes can be passed to the pkgprefix option\n\n\n\n\ncode.review.options\n\n\n-Dcode.review.options=[PATH TO OVERRIDE CONFIGURATION XML]\n\n\nThis option allows you to provide a subset configuration xml to override the default behaviour and rules.  This allows you to create you own rulesets, exclusions, etc, without changing the base configuration file.\n\n\n\n\nNote\n\n\nThis is a recommeneded approach as this allows for easier upgrades, and gives you the ability to quickly take advantage of new checks and rules on subsequent versions of the product\n\n\n\n\nExample usage of this options is as follows:\n\n\n-Dcode.review.options=c:\\SoftwareAG\\tools\\ISCCR\\myRules.xml\n\n\n\nAdditional JVM Options\n\n\n\n\nNote\n\n\nAny other JVM option can be provided as required.  You can parameterise the configuraton using environment variables, and these can be passed as a -D option.  In addition, on rare occassions, you may need to modify the JVM memory options with a -X parameter if a flow service is particulalry large (which should be refactored regardless in that scenario!)", 
            "title": "Command Line Options"
        }, 
        {
            "location": "/User Guide/Command Line Options/index.html#command-line-options", 
            "text": "This section of the documentation details all the available command line options that can be used during the execution of the code review engine.", 
            "title": "Command Line Options"
        }, 
        {
            "location": "/User Guide/Command Line Options/index.html#codereviewpkgname", 
            "text": "-Dcode.review.pkgname=[PACKAGE NAME]   MANDATORY FOR SINGLE PACKAGE REVIEW  This option is mandatory when performing a single package review  and must be provided, however, This can be excluded on a multi package review   This option provides the name of the package to be reviewed.  This name  MUST  match the exact case as to how the package was created in designer, For Example:  -Dcode.review.pgkname=IotDemo", 
            "title": "code.review.pkgname"
        }, 
        {
            "location": "/User Guide/Command Line Options/index.html#codereviewpkgprefix", 
            "text": "-Dcode.review.pkgprefix=[PREFIX or COMMA SEPARATED LIST OF PREFIXES]   MANDTORY  This option is mandatory and must be provided   This option provides a prefix of the package, or a list of package prefixes where a multi-package review needs to include packages with different prefixes.  For example:  -Dcode.review.pkgprefix=Iot  or for a multi-package review  -Dcode.review.pkgprefix=Iot,Sag,Wx", 
            "title": "code.review.pkgprefix"
        }, 
        {
            "location": "/User Guide/Command Line Options/index.html#codereviewdirectory", 
            "text": "-Dcode.review.directory=[LOCATION OF PACKAGES DIRECTORY]   MANDATORY  This option is mandatory and must be provided   This option provides the location of the packages directory.  This is normally the location as to where the packages have been checked out of source control, but could also point to the integration server packages directory.  For example:  -Dcode.review.directory=c:\\softwareag\\IntegrationServer\\instances\\default\\packages", 
            "title": "code.review.directory"
        }, 
        {
            "location": "/User Guide/Command Line Options/index.html#codereviewrunmode", 
            "text": "-Dcode.review.runmode=[MULTI]  This option is option and only required when you want to perform a multi-package review.  In this scenario, you provide the command option as follows:  -Dcode.review.runmode=MULTI   Note  With a multi package review, the packagename option is not required, and a comma separated list of prefixes can be passed to the pkgprefix option", 
            "title": "code.review.runmode"
        }, 
        {
            "location": "/User Guide/Command Line Options/index.html#codereviewoptions", 
            "text": "-Dcode.review.options=[PATH TO OVERRIDE CONFIGURATION XML]  This option allows you to provide a subset configuration xml to override the default behaviour and rules.  This allows you to create you own rulesets, exclusions, etc, without changing the base configuration file.   Note  This is a recommeneded approach as this allows for easier upgrades, and gives you the ability to quickly take advantage of new checks and rules on subsequent versions of the product   Example usage of this options is as follows:  -Dcode.review.options=c:\\SoftwareAG\\tools\\ISCCR\\myRules.xml", 
            "title": "code.review.options"
        }, 
        {
            "location": "/User Guide/Command Line Options/index.html#additional-jvm-options", 
            "text": "Note  Any other JVM option can be provided as required.  You can parameterise the configuraton using environment variables, and these can be passed as a -D option.  In addition, on rare occassions, you may need to modify the JVM memory options with a -X parameter if a flow service is particulalry large (which should be refactored regardless in that scenario!)", 
            "title": "Additional JVM Options"
        }, 
        {
            "location": "/User Guide/Configuration Xml/index.html", 
            "text": "config.xml\n\n\nThe configuration file provides the parameters, review checks, and the configuration of Integration Server Continuous Code Review.  The file is split into an number of sections\n\n\nGlobal Parameters\n\n\nGlobal parameters provide hard coded or environment variables that control the Code Review process.  The following parameters are specified in the configuration file\n\n\n\n\n\n\n\n\nParameter\n\n\nExample\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncode.review.pkgname\n\n\n${code.review.pkgname}\n\n\nThe package name to be reviewed, provided through an environment variable to the command line\n\n\n\n\n\n\ncode.review.pkgprefix\n\n\n${code.review.pkgprefix}\n\n\nThe prefix letters of the package to be review, provided through an environment variable to the command line\n\n\n\n\n\n\nfolder-prefix\n\n\ncom.softwareag\n\n\nThe base folder structure required within every package\n\n\n\n\n\n\ncode.review.directory\n\n\n${code.review.directory}\n\n\nThe location of the packages directory, provided through an environment variable to the command line\n\n\n\n\n\n\ncode.review.output.directory\n\n\n\n\nProvides the directory of where to output the files/reports.  By default this is empty meaning reports are output to the directory from where the code review process is executed.  It is recommended to leave this empty\n\n\n\n\n\n\ncode.review.output.preserve\n\n\nfalse\n\n\nWhether to pre-pend the date to the report files names to allow you to keep the files over time, versus overwriting the previous report if the value is set to true.\n\n\n\n\n\n\ncode.review.ignore.fail\n\n\nfalse\n\n\nWhen set to false, a negative return code will be output from the code review process on failure.  When set to true, this will not happen.  This parameter is useful as part of a continuous integration process where you wish to stop the build on any quality issues.  Recommened to leave set as \nfalse\n\n\n\n\n\n\ncode.review.logger.level\n\n\nINFO\n\n\nLogging output level.  It is recommeneded to leave this as \nINFO\n unless you are developing new rules/conditions, and in those scenarios, you may wish to see more detailed logging output by changing the value to \nTRACE\n.  All supported values are TRACE; DEBUG; INFO; WARNING; SEVERE\n\n\n\n\n\n\ncode.review.operation.threads.timeout\n\n\n120\n\n\nThis value sets the timeout of the execution threads.  If a single check takes longer than the provided time here, it will be aborted.  It is recommended not to adjust this unless otherwise advised\n\n\n\n\n\n\ncode.review.operation.threads.embedded\n\n\n3\n\n\nThis is the number of threads to use for executing rules when not run in interactive mode.  It is recommended not to adjust this value unless otherwise advised\n\n\n\n\n\n\ncode.review.operation.threads.interactive\n\n\n1\n\n\nThis is the number of threads to use for executing rules when run in interactive mode.  It is recommended not to adjust this value unless otherwise advised\n\n\n\n\n\n\n\n\nEach global paremeter is provided / configured similar to the following example\n\n\nEnvironment variable provided parameter\n\n\nglobalParameter name=\ncode.review.pkgprefix\n\n  \ndescription\nPackage prefix\n/description\n\n  \nvalue\n${code.review.pkgprefix}\n/value\n\n\n/globalParameter\n\n\n\n\n\nHard coded parameter\n\n\nglobalParameter name=\nfolder-prefix\n\n  \ndescription\nRoot folder prefix used in all services\n/description\n\n  \nvalue\ncom.softwareag\n/value\n\n\n/globalParameter\n\n\n\n\n\nReview Configuration\n\n\nEach review check is specified using a common structure.  Each check has:\n\n\n\n\n\n\n\n\nName\n\n\nExample\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nSP1\n\n\nA unique short identifier for each check.  By default out of the box these follow a naming convention where SP=Service Property, FQ=Flow Quality, NS=Naming Standards, MS=Additional Checks\n\n\n\n\n\n\nname\n\n\nStateless\n\n\nThe name of the check\n\n\n\n\n\n\nenabled\n\n\ntrue\n\n\nWhen set to \ntrue\n the check is included in a review, when set to \nfalse\n the check is excluded from any review\n\n\n\n\n\n\nignoreFailure\n\n\nfalse\n\n\nWhen set to \ntrue\n failures are ignored.\n\n\n\n\n\n\nDescription\n\n\nA description\n\n\nThis is a full textual description and explanation of the review item\n\n\n\n\n\n\nImplementation/class\n\n\ncom.softwareag....ServiceProperties\n\n\nDefines the Operation implementation to be used\n\n\n\n\n\n\nImplementation/parameters\n\n\nparameter[1]=stateless;parameter[2]=yes\n\n\nProvides parameters for the operation\n\n\n\n\n\n\nImplementation/exclusions\n\n\nexclusion[1]=REGEXP1;exclusion[2]=REGEXP2\n\n\nImplements an exlusion list to exclude matching assets from the review (see below for example)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\nThe information on each of the checks can be found in \nUser Guide/PRIME Review Checks\n\n\n\n\nThe following excerpt demonstrates an individual review item\n\n\ncheck id=\nSP1\n name=\nStateless\n enabled=\ntrue\n ignoreFailure=\nfalse\n\n  \ndescription\n![CDATA[Services should be stateless to avoid creating session state where not needed. Each session\nconsumes resources on the IS, consumes memory, creates a database entry, and in a clustered environment needs\nto be synchronized between cluster nodes. To minimize the build-up of unnecessary sessions it is recommended to ensure stateless services are used where possible.  This can be changed on the 'stateless' flow property within Designer by setting the value to yes.\nThe table below highlights all services in the package which are currently configured as stateless]]\n/description\n\n  \nimplementation\n\n    \nclass\ncom.softwareag.gcs.wm.codereview.operations.ServiceProperties\n/class\n\n    \nparameters\n\n      \nparameter\nstateless\n/parameter\n\n      \nparameter\nyes\n/parameter\n\n    \n/parameters\n\n  \n/implementation\n\n\n/check\n\n\n\n\n\nExclusions\n\n\nOn some occasions, you may wish to exclude particular services or directories from the review.  To do this, you can supply a list of exclusions within the check.  The exclusions can be singular or multiples and are specified as a regular expression. For example:\n\n\ncheck id=\nFQ10\n name=\nService invoke comments\n enabled=\ntrue\n ignoreFailure=\ntrue\n\n  \ndescription\n![CDATA[Comments should be provided for each service that is invoked from the main service.  This helps to improve code readability and maintainability to help reduce cost of change.  Every service invoke should have a comment value set.]]\n/description\n\n  \nimplementation\n\n    \nclass\ncom.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker\n/class\n\n    \nparameters\n\n      \nparameter\ncount(//INVOKE[string-length(COMMENT)=0 and not(@DISABLED)])=0\n/parameter\n\n    \n/parameters\n\n    \nexclusions\n\n      \nexclusion\ncom\\.softwareag\\.example\\.pub\\:addNumber\n/exclusion\n\n    \n/exclusions\n\n  \n/implementation\n\n\n/check\n\n\n\n\n\nSensors\n\n\nSensors provide the ability to glean metrics from the code, and can use a decorator to summarise or provide calculations based on the metrics\n\n\nEach sensor is specified using a common structure.  Each sensor has:\n\n\n\n\n\n\n\n\nName\n\n\nExample\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nscope\n\n\npackage\n\n\nWhether the sensor executes on an individual package \npackage\n or the whole set of review assets in a multi-review \nreview\n\n\n\n\n\n\ndefinition/sensorName\n\n\ntotals\n\n\nName of the sensor\n\n\n\n\n\n\ndefinition/implementation\n\n\ncom.softwareag...TotalsSensor\n\n\nDefines the sensor implemenation to be used\n\n\n\n\n\n\ndecorator/name\n\n\nFlowTotals\n\n\nDefines the name of any decorator\n\n\n\n\n\n\ndecorator/implementation\n\n\ncom.softwareag...FlowTotals\n\n\nDefines the decorator implementation to be used\n\n\n\n\n\n\n\n\nThe following excerpt demonstrate an individual sensor (with decorator)\n\n\nsensor scope=\npackage\n\n  \ndefinition sensorName=\ntotals\n sensorClass=\ncom.softwareag.gcs.wm.codereview.sensors.TotalsSensor\n\n    \ndecorator name=\nFlowTotals\n class=\ncom.softwareag.gcs.wm.codereview.decorators.SummaryTotals\n/\n\n  \n/definition\n\n\n/sensor\n\n\n\n\n\nRenderers\n\n\nA renderer processes the data of the report including the check results, sensors and decorators and determines what to do with the data.  By default there are 4 renderers providing functionality\n\n\n\n\n\n\n\n\nNAME\n\n\nScope\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nXML\n\n\nall\n\n\nWrites the raw XML output to a file.\n\n\n\n\n\n\nHTML\n\n\nSingle\n\n\nWrites a HTML report, created using the \nGenerateReport.xsl\n file\n\n\n\n\n\n\nHTML-MULTI\n\n\nMulti\n\n\nWrites a multi report for a mult-package review\n\n\n\n\n\n\nJUNIT\n\n\nall\n\n\nWrites an XML File in JUnit publishable format\n\n\n\n\n\n\nCSV\n\n\nall\n\n\nWrites the data as a CSV file that can be imported into other tools\n\n\n\n\n\n\n\n\nThe following excerpt demonstrates an individual renderer\n\n\nrenderer name=\nhtml-package\n class=\ncom.softwareag.gcs.wm.codereview.renderers.XSLRenderer\n scope=\nsingle\n\n  \nparameters\n\n    \nparameter\nGenerateReport.xsl\n/parameter\n\n    \nparameter\n%code.review.output.directory%\n/parameter\n\n    \nparameter\n%code.review.output.preserve%\n/parameter\n\n    \nparameter\nhtml\n/parameter\n\n  \n/parameters\n\n\n/renderer\n\n\n\n\n\nOverride Configuration\n\n\nRather than modifying the main configuration file, which would result in difficulties with upgrading, receiving new out of the box checks, and potentially running in a non-supported manner, you can provide you own override configuration file by providing the command line parameter on startup \n\n\n-Dcode.review.options=myConfig.xml\n\n\nThis configuration file can be used to override individual rules or paremeters, e.g. you can create a file such as:\n\n\n?xml version=\n1.0\n encoding=\nUTF-8\n?\n\n\nCodeCheckConfiguration xmlns:xsi=\nhttp://www.w3.org/2001/XMLSchema-instance\n version=\n1.0\n xsi:noNamespaceSchemaLocation=\nC:\\development\\isccr\\cont-code-review\\trunk\\FlowCodeChecker\\CodeCheckConfiguration.xsd\n\n  \nglobalParameters\n\n    \n!-- Value to use for the root folder checks --\n\n    \nglobalParameter name=\nfolder-prefix\n\n      \ndescription\nRoot folder prefix used in all services\n/description\n\n      \nvalue\ncom.myorganisation\n/value\n\n    \n/globalParameter\n\n  \n/globalParmeters\n    \n  \nchecks\n\n    \ncheck id=\nSP2\n name=\nPipeline Save Restore\n enabled=\ntrue\n ignoreFailure=\ntrue\n\n      \ndescription\nNo Save/Restore Pipeline options should be set against the service.  The Save/Restore pipeline options where set can result in unnecessary I/O and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised.  It is recommended to remote these options from the services before deployment to a non-development environment, or use the extended property (watt.server.pipeline.processor) to disable these in the non-development environments.  Where this is the case, this rule can be ignored\n/description\n\n      \nimplementation\n\n        \nclass\ncom.softwareag.gcs.wm.codereview.operations.ServiceProperties\n/class\n\n        \nparameters\n\n          \nparameter\npipeline_option\n/parameter\n\n          \nparameter\n0\n/parameter\n\n          \nparameter\n1\n/parameter\n\n        \n/parameters\n\n      \n/implementation\n\n    \n/check\n\n  \n/checks\n\n\n/CodeCheckConfiguration\n\n\n\n\n\nThis will:\n\n\n\n\nModify the folder-prefix\n\n\nOverride the ignoreFailure property for the SP2 rule to ignore failures\n\n\n\n\nPackage Specific Configuration\n\n\nAn override configuration per package can be placed within the package and committed to source control, by creating a file \ncodereview.xml\n wihtin the package's \nconfig\n directory.  This is a particulaly useful technical for (but not limited to) the following:\n\n\n\n\nProvide exclusions on individual checks\n\n\nModify the behaviour of the connections package rule\n\n\nProvide exceptions to naming standards, particulalry when related to generated document types.", 
            "title": "config.xml"
        }, 
        {
            "location": "/User Guide/Configuration Xml/index.html#configxml", 
            "text": "The configuration file provides the parameters, review checks, and the configuration of Integration Server Continuous Code Review.  The file is split into an number of sections", 
            "title": "config.xml"
        }, 
        {
            "location": "/User Guide/Configuration Xml/index.html#global-parameters", 
            "text": "Global parameters provide hard coded or environment variables that control the Code Review process.  The following parameters are specified in the configuration file     Parameter  Example  Description      code.review.pkgname  ${code.review.pkgname}  The package name to be reviewed, provided through an environment variable to the command line    code.review.pkgprefix  ${code.review.pkgprefix}  The prefix letters of the package to be review, provided through an environment variable to the command line    folder-prefix  com.softwareag  The base folder structure required within every package    code.review.directory  ${code.review.directory}  The location of the packages directory, provided through an environment variable to the command line    code.review.output.directory   Provides the directory of where to output the files/reports.  By default this is empty meaning reports are output to the directory from where the code review process is executed.  It is recommended to leave this empty    code.review.output.preserve  false  Whether to pre-pend the date to the report files names to allow you to keep the files over time, versus overwriting the previous report if the value is set to true.    code.review.ignore.fail  false  When set to false, a negative return code will be output from the code review process on failure.  When set to true, this will not happen.  This parameter is useful as part of a continuous integration process where you wish to stop the build on any quality issues.  Recommened to leave set as  false    code.review.logger.level  INFO  Logging output level.  It is recommeneded to leave this as  INFO  unless you are developing new rules/conditions, and in those scenarios, you may wish to see more detailed logging output by changing the value to  TRACE .  All supported values are TRACE; DEBUG; INFO; WARNING; SEVERE    code.review.operation.threads.timeout  120  This value sets the timeout of the execution threads.  If a single check takes longer than the provided time here, it will be aborted.  It is recommended not to adjust this unless otherwise advised    code.review.operation.threads.embedded  3  This is the number of threads to use for executing rules when not run in interactive mode.  It is recommended not to adjust this value unless otherwise advised    code.review.operation.threads.interactive  1  This is the number of threads to use for executing rules when run in interactive mode.  It is recommended not to adjust this value unless otherwise advised     Each global paremeter is provided / configured similar to the following example  Environment variable provided parameter  globalParameter name= code.review.pkgprefix \n   description Package prefix /description \n   value ${code.review.pkgprefix} /value  /globalParameter   Hard coded parameter  globalParameter name= folder-prefix \n   description Root folder prefix used in all services /description \n   value com.softwareag /value  /globalParameter", 
            "title": "Global Parameters"
        }, 
        {
            "location": "/User Guide/Configuration Xml/index.html#review-configuration", 
            "text": "Each review check is specified using a common structure.  Each check has:     Name  Example  description      id  SP1  A unique short identifier for each check.  By default out of the box these follow a naming convention where SP=Service Property, FQ=Flow Quality, NS=Naming Standards, MS=Additional Checks    name  Stateless  The name of the check    enabled  true  When set to  true  the check is included in a review, when set to  false  the check is excluded from any review    ignoreFailure  false  When set to  true  failures are ignored.    Description  A description  This is a full textual description and explanation of the review item    Implementation/class  com.softwareag....ServiceProperties  Defines the Operation implementation to be used    Implementation/parameters  parameter[1]=stateless;parameter[2]=yes  Provides parameters for the operation    Implementation/exclusions  exclusion[1]=REGEXP1;exclusion[2]=REGEXP2  Implements an exlusion list to exclude matching assets from the review (see below for example)      Note  The information on each of the checks can be found in  User Guide/PRIME Review Checks   The following excerpt demonstrates an individual review item  check id= SP1  name= Stateless  enabled= true  ignoreFailure= false \n   description ![CDATA[Services should be stateless to avoid creating session state where not needed. Each session\nconsumes resources on the IS, consumes memory, creates a database entry, and in a clustered environment needs\nto be synchronized between cluster nodes. To minimize the build-up of unnecessary sessions it is recommended to ensure stateless services are used where possible.  This can be changed on the 'stateless' flow property within Designer by setting the value to yes.\nThe table below highlights all services in the package which are currently configured as stateless]] /description \n   implementation \n     class com.softwareag.gcs.wm.codereview.operations.ServiceProperties /class \n     parameters \n       parameter stateless /parameter \n       parameter yes /parameter \n     /parameters \n   /implementation  /check", 
            "title": "Review Configuration"
        }, 
        {
            "location": "/User Guide/Configuration Xml/index.html#exclusions", 
            "text": "On some occasions, you may wish to exclude particular services or directories from the review.  To do this, you can supply a list of exclusions within the check.  The exclusions can be singular or multiples and are specified as a regular expression. For example:  check id= FQ10  name= Service invoke comments  enabled= true  ignoreFailure= true \n   description ![CDATA[Comments should be provided for each service that is invoked from the main service.  This helps to improve code readability and maintainability to help reduce cost of change.  Every service invoke should have a comment value set.]] /description \n   implementation \n     class com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker /class \n     parameters \n       parameter count(//INVOKE[string-length(COMMENT)=0 and not(@DISABLED)])=0 /parameter \n     /parameters \n     exclusions \n       exclusion com\\.softwareag\\.example\\.pub\\:addNumber /exclusion \n     /exclusions \n   /implementation  /check", 
            "title": "Exclusions"
        }, 
        {
            "location": "/User Guide/Configuration Xml/index.html#sensors", 
            "text": "Sensors provide the ability to glean metrics from the code, and can use a decorator to summarise or provide calculations based on the metrics  Each sensor is specified using a common structure.  Each sensor has:     Name  Example  Description      scope  package  Whether the sensor executes on an individual package  package  or the whole set of review assets in a multi-review  review    definition/sensorName  totals  Name of the sensor    definition/implementation  com.softwareag...TotalsSensor  Defines the sensor implemenation to be used    decorator/name  FlowTotals  Defines the name of any decorator    decorator/implementation  com.softwareag...FlowTotals  Defines the decorator implementation to be used     The following excerpt demonstrate an individual sensor (with decorator)  sensor scope= package \n   definition sensorName= totals  sensorClass= com.softwareag.gcs.wm.codereview.sensors.TotalsSensor \n     decorator name= FlowTotals  class= com.softwareag.gcs.wm.codereview.decorators.SummaryTotals / \n   /definition  /sensor", 
            "title": "Sensors"
        }, 
        {
            "location": "/User Guide/Configuration Xml/index.html#renderers", 
            "text": "A renderer processes the data of the report including the check results, sensors and decorators and determines what to do with the data.  By default there are 4 renderers providing functionality     NAME  Scope  Description      XML  all  Writes the raw XML output to a file.    HTML  Single  Writes a HTML report, created using the  GenerateReport.xsl  file    HTML-MULTI  Multi  Writes a multi report for a mult-package review    JUNIT  all  Writes an XML File in JUnit publishable format    CSV  all  Writes the data as a CSV file that can be imported into other tools     The following excerpt demonstrates an individual renderer  renderer name= html-package  class= com.softwareag.gcs.wm.codereview.renderers.XSLRenderer  scope= single \n   parameters \n     parameter GenerateReport.xsl /parameter \n     parameter %code.review.output.directory% /parameter \n     parameter %code.review.output.preserve% /parameter \n     parameter html /parameter \n   /parameters  /renderer", 
            "title": "Renderers"
        }, 
        {
            "location": "/User Guide/Configuration Xml/index.html#override-configuration", 
            "text": "Rather than modifying the main configuration file, which would result in difficulties with upgrading, receiving new out of the box checks, and potentially running in a non-supported manner, you can provide you own override configuration file by providing the command line parameter on startup   -Dcode.review.options=myConfig.xml  This configuration file can be used to override individual rules or paremeters, e.g. you can create a file such as:  ?xml version= 1.0  encoding= UTF-8 ?  CodeCheckConfiguration xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance  version= 1.0  xsi:noNamespaceSchemaLocation= C:\\development\\isccr\\cont-code-review\\trunk\\FlowCodeChecker\\CodeCheckConfiguration.xsd \n   globalParameters \n     !-- Value to use for the root folder checks -- \n     globalParameter name= folder-prefix \n       description Root folder prefix used in all services /description \n       value com.myorganisation /value \n     /globalParameter \n   /globalParmeters     \n   checks \n     check id= SP2  name= Pipeline Save Restore  enabled= true  ignoreFailure= true \n       description No Save/Restore Pipeline options should be set against the service.  The Save/Restore pipeline options where set can result in unnecessary I/O and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised.  It is recommended to remote these options from the services before deployment to a non-development environment, or use the extended property (watt.server.pipeline.processor) to disable these in the non-development environments.  Where this is the case, this rule can be ignored /description \n       implementation \n         class com.softwareag.gcs.wm.codereview.operations.ServiceProperties /class \n         parameters \n           parameter pipeline_option /parameter \n           parameter 0 /parameter \n           parameter 1 /parameter \n         /parameters \n       /implementation \n     /check \n   /checks  /CodeCheckConfiguration   This will:   Modify the folder-prefix  Override the ignoreFailure property for the SP2 rule to ignore failures", 
            "title": "Override Configuration"
        }, 
        {
            "location": "/User Guide/Configuration Xml/index.html#package-specific-configuration", 
            "text": "An override configuration per package can be placed within the package and committed to source control, by creating a file  codereview.xml  wihtin the package's  config  directory.  This is a particulaly useful technical for (but not limited to) the following:   Provide exclusions on individual checks  Modify the behaviour of the connections package rule  Provide exceptions to naming standards, particulalry when related to generated document types.", 
            "title": "Package Specific Configuration"
        }, 
        {
            "location": "/User Guide/Continuous Integration (CI) Server/index.html", 
            "text": "Continuous Integration (CI) Server\n\n\nPre-requisites\n\n\n\n\nInstallation and Configuration of a suitable CI tool (e.g Jenkins)\n\n\nModification of the CodeReview.cmd as detailed \nhere\n\n\n\n\nImplementation\n\n\nAfter following the installation notes, and ensuring the pre-requisites are complete, you can configure the code review engine in a CI Process as follows\n\n\nExtract the Package Source code from source repository\n\n\n\n\nExtract the package files from source control using the CI tools functionality, e.g.\n\n\n\n\n\nCreate the job configuration\n\n\n\n\nUse an excute batch command (windows) or shell (linux) to execute the code review, e.g.\n\n\n\n\n\n\n\nNote\n\n\nIn this example the %workspace%\\%JOB_NAME% parameter is provided as the path to the code and an override options file along with the other mandatory parameters\n\n\n\n\nBuild\n\n\n\n\nRun the build job and examine the output\n\n\n\n\n\nPublish JUnit report\n\n\n\n\nPublish the generated JUnit report to provide history", 
            "title": "Continuous Integration (CI) Server"
        }, 
        {
            "location": "/User Guide/Continuous Integration (CI) Server/index.html#continuous-integration-ci-server", 
            "text": "", 
            "title": "Continuous Integration (CI) Server"
        }, 
        {
            "location": "/User Guide/Continuous Integration (CI) Server/index.html#pre-requisites", 
            "text": "Installation and Configuration of a suitable CI tool (e.g Jenkins)  Modification of the CodeReview.cmd as detailed  here", 
            "title": "Pre-requisites"
        }, 
        {
            "location": "/User Guide/Continuous Integration (CI) Server/index.html#implementation", 
            "text": "After following the installation notes, and ensuring the pre-requisites are complete, you can configure the code review engine in a CI Process as follows", 
            "title": "Implementation"
        }, 
        {
            "location": "/User Guide/Continuous Integration (CI) Server/index.html#extract-the-package-source-code-from-source-repository", 
            "text": "Extract the package files from source control using the CI tools functionality, e.g.", 
            "title": "Extract the Package Source code from source repository"
        }, 
        {
            "location": "/User Guide/Continuous Integration (CI) Server/index.html#create-the-job-configuration", 
            "text": "Use an excute batch command (windows) or shell (linux) to execute the code review, e.g.    Note  In this example the %workspace%\\%JOB_NAME% parameter is provided as the path to the code and an override options file along with the other mandatory parameters", 
            "title": "Create the job configuration"
        }, 
        {
            "location": "/User Guide/Continuous Integration (CI) Server/index.html#build", 
            "text": "Run the build job and examine the output", 
            "title": "Build"
        }, 
        {
            "location": "/User Guide/Continuous Integration (CI) Server/index.html#publish-junit-report", 
            "text": "Publish the generated JUnit report to provide history", 
            "title": "Publish JUnit report"
        }, 
        {
            "location": "/User Guide/Eclipse Plugin/index.html", 
            "text": "Eclipse Plugin\n\n\nConfiguration\n\n\nThe configuration of ISCCR can be found within the menu under window/preferences/Continuous Code Review.\nWithin these settings you can\n\n\n\n\nSpecify the location to the code-review execution engine\n\n\nProvide a list of package prefixes that are allowed to be reviewed\n\n\nProvide any custom JVM parameters\n\n\nDetermine what to show (failure/warning/success) on review\n\n\nDetermine what the default action is when double clicking on a review item\n\n\n\n\nThis looks like the following:\n\n\n\nReview Individual Package\n\n\n\n\n\n\nTo review a package, assuming the prefix has been added within the configuration, right click on the package and select Continuous Code Review / Review Package as shown below:\n\n\n\n\n\n\n\nOnce selected, if not already visible, the review results panel will open and inform that the review is currently in process\n\n\n\n\n\n\n\nOn completion of the review, the results will be displayed\n\n\n\n\n\n\n\nDouble clicking on a result (depending on your default configuration) the detail will be shown\n\n\n\n\n\n\n\nSelecting OK will take you to the asset directly for editing (where possible)\n\n\n\n\n\n\nAdditionally you can control the results visibility in the results pane by dropping down the view panel\n\n\n\n\n\n\n\nReview all Packages\n\n\n\n\nTo review all packages, right click on the Integration Server and select Continuous Code Review/Review All Packages as shown below:\n\n\n\n\n\n\n\n\nNote\n\n\nOnly packages that match the prefixes specified in the configuration will be included in the review", 
            "title": "Eclipse Plugin"
        }, 
        {
            "location": "/User Guide/Eclipse Plugin/index.html#eclipse-plugin", 
            "text": "", 
            "title": "Eclipse Plugin"
        }, 
        {
            "location": "/User Guide/Eclipse Plugin/index.html#configuration", 
            "text": "The configuration of ISCCR can be found within the menu under window/preferences/Continuous Code Review.\nWithin these settings you can   Specify the location to the code-review execution engine  Provide a list of package prefixes that are allowed to be reviewed  Provide any custom JVM parameters  Determine what to show (failure/warning/success) on review  Determine what the default action is when double clicking on a review item   This looks like the following:", 
            "title": "Configuration"
        }, 
        {
            "location": "/User Guide/Eclipse Plugin/index.html#review-individual-package", 
            "text": "To review a package, assuming the prefix has been added within the configuration, right click on the package and select Continuous Code Review / Review Package as shown below:    Once selected, if not already visible, the review results panel will open and inform that the review is currently in process    On completion of the review, the results will be displayed    Double clicking on a result (depending on your default configuration) the detail will be shown    Selecting OK will take you to the asset directly for editing (where possible)    Additionally you can control the results visibility in the results pane by dropping down the view panel", 
            "title": "Review Individual Package"
        }, 
        {
            "location": "/User Guide/Eclipse Plugin/index.html#review-all-packages", 
            "text": "To review all packages, right click on the Integration Server and select Continuous Code Review/Review All Packages as shown below:     Note  Only packages that match the prefixes specified in the configuration will be included in the review", 
            "title": "Review all Packages"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html", 
            "text": "PRIME Review Checks\n\n\nSP1 - Stateless\n\n\nServices should be stateless to avoid creating session state where not needed. Each session consumes resources on the IS, consumes memory, creates a database entry, and in a clustered environment needs to be synchronized between cluster nodes. To minimize the build-up of unnecessary sessions it is recommended to ensure stateless services are used where possible.  This can be changed on the 'stateless' flow property within Designer by setting the value to yes.\n\n\nSP2 - Pipeline Save/Restore\n\n\nNo Save/Restore Pipeline options should be set against the service.  The Save/Restore pipeline options where set can result in unnecessary I/O and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised.  It is recommended to remote these options from the services before deployment to a non-development environment, or use the extended property (watt.server.pipeline.processor) to disable these in the non-development environments.  Where this is the case, this rule can be ignored\n\n\nFQ1 - Pipeline Services\n\n\nNo Save/Restore/Trace Pipieline services should exist within the flow service, including: \n\n\n\n\npub.flow:restorePipeline\n\n\npub.flow:restorePipelineFromFile\n\n\npub.flow:savePipeline\n\n\npub.flow:savePipelineFromFile\n\n\npub.flow:tracePipeline\n\n\n\n\nSave/Restore pipeline services result in unnecessary I/O and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised.  It is recommended to delete these from the services before deployment to a non-development environment to ensure maximum performance.  Alternative to this is to use the pipeline service options from within designer and disable these in the non-development environments as described in the previous check.\n\n\nFQ2 - Clear Pipeline\n\n\nThe ClearPipeline service should not be used as pipeline variables should be dropped immediately as soon as they are no longer required.  ClearPipeline leads to unnecessary overhead at the pipeline is walked to determine whether to preserve or drop variables, and can have significant impact on performance when a large pipeline is present.  It is recommended to delete these services from the flow and drop variables once they are no longer needed.\n\n\nFQ3 - Deprecated Services\n\n\nUse of deprecated services is not recommended as these will be dropped from the product in a future release.  Please refer to the built-in-services-guide for replacements to any deprecated services discovered to be in use and modify the flow to remove the deprecated service and update with the recommended alternative.\n\n\nFQ4 - Disabled Services\n\n\nservices should be removed to avoid performance issues as the flow is interpreted during execution.  This also results in smaller, more maintainable flow services which result in a better understanding and lower cost of maintenance.  Recommendation is to delete rather than disable any code no longer needed.\n\n\nFQ5 - Use of Pub.Storage\n\n\npub.storage services should not be used due to performance issues.  The pub.storage services have an implicit locking model and are not intended to be a high performance all-purpose database.  Where pub.storage services have been used, it is recommended to re-architect these, particularly in high-throughput scenarios.\n\n\nFQ6 - Debug Log\n\n\nDebug Log services should be removed to avoid performance issues during execution.  Where logging is required, the recommendation is to implement a more general purpose and configurable logging framework to help keep you logs more manageable and separate from product logging\n\n\nFQ7 - Public Services Try/Catch\n\n\nPublic services must have a try catch within them to ensure graceful handling of error conditions when these occur.  Public services (or top level services) need to decide how to retry or return the error condition to the consuming application.  Recommendation is to use Sequence nodes to wrap the execution of the public service within a try/catch block and use the catch to handle the error condition.  \n\n\nTry/catch can be achieved with sequence nodes by having a top level sequence with the exit on value set to \"SUCCESS\" and 2 inner sequences, the try, with the exit on value set to \"FAILURE\" and the catch, with the exit on value set to \"DONE\".  It is also recommended to add comments to these sequences to aid understanding so that a developer can identify these are for try/catch usage.`\n\n\nFQ8 - Connections Package\n\n\nAll JDBC Adapter connections should be in separate packages, that is a package should not contain connections mixed in with other assets.  This aids deployment of services as this means changes to packages can be deployed without unnecessarily affecting the JDBC Adapter database connections.  Recommendation is to have adapter connections in packages on their own, and not mix these types.\n\n\nFQ9 - FTP Timeout\n\n\nEnsure timeout is specified on FTP services.  If no timeout is specified on FTP services, the default timeout value is unlimited, meaning there is a possibility of consuming threads on the Integration Server for a long period of time, especially in the scenario where the FTP server isn't available.  Recommendation is to add a timeout value to the invocation where these services are used.\n\n\nFQ10 - Service invoke comments\n\n\nComments should be provided for each service that is invoked from the main service.  This helps to improve code readability and maintainability to help reduce cost of change.  Every service invoke should have a comment value set.\n\n\nFQ11 - Sequence comments\n\n\nComments should be provided for each sequence node that is used.  This helps to improve code readability and maintainability to help reduce cost of change.  Every sequence node should have a comment value set.\n\n\nFQ12 - Unauthorised Access/Orphaned\n\n\nAll services within this package should be invoked through a public service.  This rule Identifies any assets within the package that are not used directly or indirectly from a public flow service or DSP file contained within this package, and therefore are either not used, or are called from outside the package breaking the public/private access principle.\n\n\nFQ13 - Branch without switch or evaluate labels\n\n\nThe BRANCH step selects and executes a child step based on the value of one or more variables in the pipeline. You indicate the variables you want to branch on by specifying a switch value or by writing an expression that includes the variables, therefore a branch must have either a switch value or have evaluate labels set to true.\n\n\nFQ14 - Branch on expression when child step is without specified lable or $null\n\n\nIf you branch on expressions (Evaluate labels is set to True), you cannot branch on null or empty values. When executing the BRANCH step and evaluating labels, Integration Server ignores target steps with a blank or set to $null label.\n\n\nFQ15 - Exit Node from Specification\n\n\nThe EXIT step exits the entire flow service or a single flow step. Specifically, it may exit from the nearest ancestor loop step, a specified ancestor step, the parent step, or the entire flow service.  An exit 'From' value is required to determine where to exit from\n\n\nFQ16 - Branch Step must have child nodes\n\n\nA Branch step in a flow service must have a child node for it to be relevant.  If a branch step has no child nodes it should be deleted\n\n\nFQ17 - Loop step must have child nodes\n\n\nA Loop step in a flow service must have a child node for it to be relevant.  If a loop step has no child nodes it should be deleted\n\n\nFQ18 - Repeat step must have child nodes\n\n\nA Repeat step in a flow service must have a child node for it to be relevant.  If a repeat step has no child nodes it should be deleted\n\n\nFQ19 - Sequence step must have child nodes\n\n\nA Sequence step in a flow service must have a child node for it to be relevant.  If a sequence step has no child nodes it should be deleted\n\n\nFQ20 - Map steps must have mapped fields\n\n\nA Map step in a flow service must have mapped fields.  If a map step has no mapped fields it should be deleted\n\n\nFQ21 - Loop must have an input array provided\n\n\nA loop step must have an input array variable provided\n\n\nFQ22 - Flow service should not be empty\n\n\nA flow service should contain implementation, otherwise it should be removed from the pacakge\n\n\nNS1 - Root folder name\n\n\nRoot Folder should not be the same as the package as this can cause namespace issues should the code need to be refactored or moved to other packages for promotion to common services, inhibiting reusability.  Recommendation is to set a separate prefix folder structure from the package and use this across all packages differentiating below the prefix.  This can be one or two levels deep (but ideally should be no more) and commonly is the inverse domain name of the organisation, e.g. \"com.softwareag\"\n\n\nNS2 - Folder name\n\n\nFolders should only contain lower case ascii characters and digits.  In certain scenarios, use of the underscore character '_' is allowed but should be avoided where possible.\n\n\nNS3 - Folder prefix\n\n\nEnsure that all assets exist within the specified prefix folders.  Recommendation is to set a separate prefix folder structure from the package and use this across all packages differentiating below the prefix.  This can be one or two levels deep (but ideally should be no more) and commonly is the inverse domain name of the organisation, e.g. \"com.softwareag\".\n\n\nNS4 - Package name\n\n\nEnsure the package prefix has been specified and package name conforms to standards.\n\n\n\n\nThe package name should not end with the word \"Package\" or \"Pkg\".\n\n\nPackage names must not be prefixed with \"Wm\". These usually represent packages distributed by webMethods.\n\n\nPackages should start with an uppercase character and only contain alpha numeric character plus the underscore when absolutely required.\n\n\nPackage Name should start with your provided prefix.  A package prefix aids identification of packages created by the organisation.\n\n\n\n\nNS5 - Service name\n\n\nEnsure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST services)\n\n\nNS6 - Document name\n\n\nEnsure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary. Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check.\n\n\nNS7 - Schema name\n\n\nEnsure Schemas definitions conform to naming standards.  A schema must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary.\n\n\nNS8 - FlatFile name\n\n\nEnsure Flat File Dictionaries and Schema definitions conform to naming standards.  They must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary.\n\n\nNS9 - Blaze name\n\n\nEnsure Blaze Rules Conform to the Naming Standards.   Blaze rule service names must only contain alpha numeric characters and the underscore when absolutely necessary.\n\n\nNS10 - XSL name\n\n\nEnsure XSL Services Conform to the Naming Standards.  XSL service names must start with a lower case letter, should be camel case, and contain only alpha numeric characters\n\n\nNS11 - Adapter name\n\n\nEnsure Adapter Services Conform to the Naming Standards.  Adapter service names must start with a lower case letter, should be camel case, and contain only alpha numeric characters\n\n\nNS12 - Trigger name\n\n\nEnsure Triggers Conform to the Naming Standards.  Trigger names must start with a lower case letter, should be camel case, and contain only alpha numeric characters\n\n\nNS13 - WSD name\n\n\nEnsure WSDs Conform to the Naming Standards.  WSD names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary\n\n\nNS14 - Connection name\n\n\nEnsure Connections Conform to the Naming Standards.  Connection names must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary\n\n\nNS15 - Document variable name\n\n\nEnsure variable names within document defintions conform to the naming standards.  Variable names in document definitions must start with a lower case letter, should be camel case, and contain only alpha numeric characters.  Caters for documents generated from XSDs where the document name may contain namespace prefix and use of underscore and hyphen present\n\n\nNS16 - Service signature name\n\n\nEnsure Input/Output variables in service signatures conform to the naming standards.  Variable names in service signatures must start with a lower case letter, should be camel case, and contain only alpha numeric characters\n\n\nNS17 - REST Resource name\n\n\nEnsure REST Resouces Conform to the Naming Standards.  REST resource names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary\n\n\nNS18 - REST Descriptor name\n\n\nEnsure REST Descriptors conform to the Naming Standards.  REST descriptor names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary\n\n\nMS1 - Non-production service package suffixes\n\n\nEnsure packages with specified suffixes are not deployed to production.  This is to ensure that test packages (\n_TEST), stub packages (\n_STUB)  and development packages (*_DEV) are not deployed incorrectly into production class environments.", 
            "title": "PRIME Review Checks"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#prime-review-checks", 
            "text": "", 
            "title": "PRIME Review Checks"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#sp1-stateless", 
            "text": "Services should be stateless to avoid creating session state where not needed. Each session consumes resources on the IS, consumes memory, creates a database entry, and in a clustered environment needs to be synchronized between cluster nodes. To minimize the build-up of unnecessary sessions it is recommended to ensure stateless services are used where possible.  This can be changed on the 'stateless' flow property within Designer by setting the value to yes.", 
            "title": "SP1 - Stateless"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#sp2-pipeline-saverestore", 
            "text": "No Save/Restore Pipeline options should be set against the service.  The Save/Restore pipeline options where set can result in unnecessary I/O and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised.  It is recommended to remote these options from the services before deployment to a non-development environment, or use the extended property (watt.server.pipeline.processor) to disable these in the non-development environments.  Where this is the case, this rule can be ignored", 
            "title": "SP2 - Pipeline Save/Restore"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq1-pipeline-services", 
            "text": "No Save/Restore/Trace Pipieline services should exist within the flow service, including:    pub.flow:restorePipeline  pub.flow:restorePipelineFromFile  pub.flow:savePipeline  pub.flow:savePipelineFromFile  pub.flow:tracePipeline   Save/Restore pipeline services result in unnecessary I/O and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised.  It is recommended to delete these from the services before deployment to a non-development environment to ensure maximum performance.  Alternative to this is to use the pipeline service options from within designer and disable these in the non-development environments as described in the previous check.", 
            "title": "FQ1 - Pipeline Services"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq2-clear-pipeline", 
            "text": "The ClearPipeline service should not be used as pipeline variables should be dropped immediately as soon as they are no longer required.  ClearPipeline leads to unnecessary overhead at the pipeline is walked to determine whether to preserve or drop variables, and can have significant impact on performance when a large pipeline is present.  It is recommended to delete these services from the flow and drop variables once they are no longer needed.", 
            "title": "FQ2 - Clear Pipeline"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq3-deprecated-services", 
            "text": "Use of deprecated services is not recommended as these will be dropped from the product in a future release.  Please refer to the built-in-services-guide for replacements to any deprecated services discovered to be in use and modify the flow to remove the deprecated service and update with the recommended alternative.", 
            "title": "FQ3 - Deprecated Services"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq4-disabled-services", 
            "text": "services should be removed to avoid performance issues as the flow is interpreted during execution.  This also results in smaller, more maintainable flow services which result in a better understanding and lower cost of maintenance.  Recommendation is to delete rather than disable any code no longer needed.", 
            "title": "FQ4 - Disabled Services"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq5-use-of-pubstorage", 
            "text": "pub.storage services should not be used due to performance issues.  The pub.storage services have an implicit locking model and are not intended to be a high performance all-purpose database.  Where pub.storage services have been used, it is recommended to re-architect these, particularly in high-throughput scenarios.", 
            "title": "FQ5 - Use of Pub.Storage"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq6-debug-log", 
            "text": "Debug Log services should be removed to avoid performance issues during execution.  Where logging is required, the recommendation is to implement a more general purpose and configurable logging framework to help keep you logs more manageable and separate from product logging", 
            "title": "FQ6 - Debug Log"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq7-public-services-trycatch", 
            "text": "Public services must have a try catch within them to ensure graceful handling of error conditions when these occur.  Public services (or top level services) need to decide how to retry or return the error condition to the consuming application.  Recommendation is to use Sequence nodes to wrap the execution of the public service within a try/catch block and use the catch to handle the error condition.    Try/catch can be achieved with sequence nodes by having a top level sequence with the exit on value set to \"SUCCESS\" and 2 inner sequences, the try, with the exit on value set to \"FAILURE\" and the catch, with the exit on value set to \"DONE\".  It is also recommended to add comments to these sequences to aid understanding so that a developer can identify these are for try/catch usage.`", 
            "title": "FQ7 - Public Services Try/Catch"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq8-connections-package", 
            "text": "All JDBC Adapter connections should be in separate packages, that is a package should not contain connections mixed in with other assets.  This aids deployment of services as this means changes to packages can be deployed without unnecessarily affecting the JDBC Adapter database connections.  Recommendation is to have adapter connections in packages on their own, and not mix these types.", 
            "title": "FQ8 - Connections Package"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq9-ftp-timeout", 
            "text": "Ensure timeout is specified on FTP services.  If no timeout is specified on FTP services, the default timeout value is unlimited, meaning there is a possibility of consuming threads on the Integration Server for a long period of time, especially in the scenario where the FTP server isn't available.  Recommendation is to add a timeout value to the invocation where these services are used.", 
            "title": "FQ9 - FTP Timeout"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq10-service-invoke-comments", 
            "text": "Comments should be provided for each service that is invoked from the main service.  This helps to improve code readability and maintainability to help reduce cost of change.  Every service invoke should have a comment value set.", 
            "title": "FQ10 - Service invoke comments"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq11-sequence-comments", 
            "text": "Comments should be provided for each sequence node that is used.  This helps to improve code readability and maintainability to help reduce cost of change.  Every sequence node should have a comment value set.", 
            "title": "FQ11 - Sequence comments"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq12-unauthorised-accessorphaned", 
            "text": "All services within this package should be invoked through a public service.  This rule Identifies any assets within the package that are not used directly or indirectly from a public flow service or DSP file contained within this package, and therefore are either not used, or are called from outside the package breaking the public/private access principle.", 
            "title": "FQ12 - Unauthorised Access/Orphaned"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq13-branch-without-switch-or-evaluate-labels", 
            "text": "The BRANCH step selects and executes a child step based on the value of one or more variables in the pipeline. You indicate the variables you want to branch on by specifying a switch value or by writing an expression that includes the variables, therefore a branch must have either a switch value or have evaluate labels set to true.", 
            "title": "FQ13 - Branch without switch or evaluate labels"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq14-branch-on-expression-when-child-step-is-without-specified-lable-or-null", 
            "text": "If you branch on expressions (Evaluate labels is set to True), you cannot branch on null or empty values. When executing the BRANCH step and evaluating labels, Integration Server ignores target steps with a blank or set to $null label.", 
            "title": "FQ14 - Branch on expression when child step is without specified lable or $null"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq15-exit-node-from-specification", 
            "text": "The EXIT step exits the entire flow service or a single flow step. Specifically, it may exit from the nearest ancestor loop step, a specified ancestor step, the parent step, or the entire flow service.  An exit 'From' value is required to determine where to exit from", 
            "title": "FQ15 - Exit Node from Specification"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq16-branch-step-must-have-child-nodes", 
            "text": "A Branch step in a flow service must have a child node for it to be relevant.  If a branch step has no child nodes it should be deleted", 
            "title": "FQ16 - Branch Step must have child nodes"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq17-loop-step-must-have-child-nodes", 
            "text": "A Loop step in a flow service must have a child node for it to be relevant.  If a loop step has no child nodes it should be deleted", 
            "title": "FQ17 - Loop step must have child nodes"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq18-repeat-step-must-have-child-nodes", 
            "text": "A Repeat step in a flow service must have a child node for it to be relevant.  If a repeat step has no child nodes it should be deleted", 
            "title": "FQ18 - Repeat step must have child nodes"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq19-sequence-step-must-have-child-nodes", 
            "text": "A Sequence step in a flow service must have a child node for it to be relevant.  If a sequence step has no child nodes it should be deleted", 
            "title": "FQ19 - Sequence step must have child nodes"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq20-map-steps-must-have-mapped-fields", 
            "text": "A Map step in a flow service must have mapped fields.  If a map step has no mapped fields it should be deleted", 
            "title": "FQ20 - Map steps must have mapped fields"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq21-loop-must-have-an-input-array-provided", 
            "text": "A loop step must have an input array variable provided", 
            "title": "FQ21 - Loop must have an input array provided"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#fq22-flow-service-should-not-be-empty", 
            "text": "A flow service should contain implementation, otherwise it should be removed from the pacakge", 
            "title": "FQ22 - Flow service should not be empty"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#ns1-root-folder-name", 
            "text": "Root Folder should not be the same as the package as this can cause namespace issues should the code need to be refactored or moved to other packages for promotion to common services, inhibiting reusability.  Recommendation is to set a separate prefix folder structure from the package and use this across all packages differentiating below the prefix.  This can be one or two levels deep (but ideally should be no more) and commonly is the inverse domain name of the organisation, e.g. \"com.softwareag\"", 
            "title": "NS1 - Root folder name"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#ns2-folder-name", 
            "text": "Folders should only contain lower case ascii characters and digits.  In certain scenarios, use of the underscore character '_' is allowed but should be avoided where possible.", 
            "title": "NS2 - Folder name"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#ns3-folder-prefix", 
            "text": "Ensure that all assets exist within the specified prefix folders.  Recommendation is to set a separate prefix folder structure from the package and use this across all packages differentiating below the prefix.  This can be one or two levels deep (but ideally should be no more) and commonly is the inverse domain name of the organisation, e.g. \"com.softwareag\".", 
            "title": "NS3 - Folder prefix"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#ns4-package-name", 
            "text": "Ensure the package prefix has been specified and package name conforms to standards.   The package name should not end with the word \"Package\" or \"Pkg\".  Package names must not be prefixed with \"Wm\". These usually represent packages distributed by webMethods.  Packages should start with an uppercase character and only contain alpha numeric character plus the underscore when absolutely required.  Package Name should start with your provided prefix.  A package prefix aids identification of packages created by the organisation.", 
            "title": "NS4 - Package name"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#ns5-service-name", 
            "text": "Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST services)", 
            "title": "NS5 - Service name"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#ns6-document-name", 
            "text": "Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary. Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check.", 
            "title": "NS6 - Document name"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#ns7-schema-name", 
            "text": "Ensure Schemas definitions conform to naming standards.  A schema must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary.", 
            "title": "NS7 - Schema name"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#ns8-flatfile-name", 
            "text": "Ensure Flat File Dictionaries and Schema definitions conform to naming standards.  They must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary.", 
            "title": "NS8 - FlatFile name"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#ns9-blaze-name", 
            "text": "Ensure Blaze Rules Conform to the Naming Standards.   Blaze rule service names must only contain alpha numeric characters and the underscore when absolutely necessary.", 
            "title": "NS9 - Blaze name"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#ns10-xsl-name", 
            "text": "Ensure XSL Services Conform to the Naming Standards.  XSL service names must start with a lower case letter, should be camel case, and contain only alpha numeric characters", 
            "title": "NS10 - XSL name"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#ns11-adapter-name", 
            "text": "Ensure Adapter Services Conform to the Naming Standards.  Adapter service names must start with a lower case letter, should be camel case, and contain only alpha numeric characters", 
            "title": "NS11 - Adapter name"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#ns12-trigger-name", 
            "text": "Ensure Triggers Conform to the Naming Standards.  Trigger names must start with a lower case letter, should be camel case, and contain only alpha numeric characters", 
            "title": "NS12 - Trigger name"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#ns13-wsd-name", 
            "text": "Ensure WSDs Conform to the Naming Standards.  WSD names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary", 
            "title": "NS13 - WSD name"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#ns14-connection-name", 
            "text": "Ensure Connections Conform to the Naming Standards.  Connection names must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary", 
            "title": "NS14 - Connection name"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#ns15-document-variable-name", 
            "text": "Ensure variable names within document defintions conform to the naming standards.  Variable names in document definitions must start with a lower case letter, should be camel case, and contain only alpha numeric characters.  Caters for documents generated from XSDs where the document name may contain namespace prefix and use of underscore and hyphen present", 
            "title": "NS15 - Document variable name"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#ns16-service-signature-name", 
            "text": "Ensure Input/Output variables in service signatures conform to the naming standards.  Variable names in service signatures must start with a lower case letter, should be camel case, and contain only alpha numeric characters", 
            "title": "NS16 - Service signature name"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#ns17-rest-resource-name", 
            "text": "Ensure REST Resouces Conform to the Naming Standards.  REST resource names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary", 
            "title": "NS17 - REST Resource name"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#ns18-rest-descriptor-name", 
            "text": "Ensure REST Descriptors conform to the Naming Standards.  REST descriptor names must start with a lower case letter, should be camel case, and contain only alpha numeric characters and the underscore character where absolutely necessary", 
            "title": "NS18 - REST Descriptor name"
        }, 
        {
            "location": "/User Guide/PRIME Review Checks/index.html#ms1-non-production-service-package-suffixes", 
            "text": "Ensure packages with specified suffixes are not deployed to production.  This is to ensure that test packages ( _TEST), stub packages ( _STUB)  and development packages (*_DEV) are not deployed incorrectly into production class environments.", 
            "title": "MS1 - Non-production service package suffixes"
        }, 
        {
            "location": "/User Guide/Reports/index.html", 
            "text": "Reports\n\n\nHTML Report\n\n\nThe generated HTML report contains the full detail of each review item, as well as an overall summary.\n\n\ne.g.\n\n\n\n\n\n\nCSV Report\n\n\nThe CVS report contains the raw data generated from the review presented in CSV format, .e.g\n\n\nID  NAME       SERVICE                                         CHECKID  TEST_PASSED  VALUE  IGNORE_FAILURE  RAGSTATUS\n1   Stateless  com.softwareag.core.monitor.impl:criticalAction SP1.1    TRUE         yes    FALSE           1\n1   Stateless  com.softwareag.core.monitor.impl:getSettings    SP1.2    TRUE         yes    FALSE           1\n1   Stateless  com.softwareag.core.monitor.impl:invokeQuiesce  SP1.3    TRUE         yes    FALSE           1\n\n\n\n\nXML Report\n\n\nContains the raw xml, useful if you want to build your own custom HTML repor\n\n\nAn excerpt of an example report is below:\n\n\n.....\n\nresults\n\n  \nSummary\n\n    \ntotal\n6\n/total\n\n    \npass\n6\n/pass\n\n    \nfail\n0\n/fail\n\n    \nwarn\n0\n/warn\n\n    \nragStatus\n1\n/ragStatus\n\n    \nexecuteTime\n112\n/executeTime\n\n  \n/Summary\n\n  \nReport\n\n    \nTest passed=\ntrue\n check-id=\nSP2.1\n ragStatus=\n1\n executeTime=\n15\n\n      \nService\ncom.softwareag.testsystem.impl:allowedLocations\n/Service\n\n      \nType\nFLOWSERVICE\n/Type\n\n      \nValue\ntrue\n/Value\n\n    \n/Test\n\n    \nTest passed=\ntrue\n check-id=\nSP2.2\n ragStatus=\n1\n executeTime=\n51\n\n      \nService\ncom.softwareag.testsystem.impl:callYahoo\n/Service\n\n      \nType\nFLOWSERVICE\n/Type\n\n      \nValue\ntrue\n/Value\n\n    \n/Test\n\n    \nTest passed=\ntrue\n check-id=\nSP2.3\n ragStatus=\n1\n executeTime=\n9\n\n      \nService\ncom.softwareag.testsystem.pub:isAllowedLocation\n/Service\n\n      \nType\nFLOWSERVICE\n/Type\n\n      \nValue\ntrue\n/Value\n\n    \n/Test\n\n    \nTest passed=\ntrue\n check-id=\nSP2.4\n ragStatus=\n1\n executeTime=\n7\n\n      \nService\ncom.softwareag.testsystem.pub.isitsunny:_get\n/Service\n\n      \nType\nFLOWSERVICE\n/Type\n\n      \nValue\ntrue\n/Value\n\n    \n/Test\n\n    \nTest passed=\ntrue\n check-id=\nSP2.5\n ragStatus=\n1\n executeTime=\n8\n\n      \nService\ncom.softwareag.testsystem.pub:isLocationSupported\n/Service\n\n      \nType\nFLOWSERVICE\n/Type\n\n      \nValue\ntrue\n/Value\n\n    \n/Test\n\n    \nTest passed=\ntrue\n check-id=\nSP2.6\n ragStatus=\n1\n executeTime=\n6\n\n      \nService\ncom.softwareag.testsystem.pub.weather:isItSunny\n/Service\n\n      \nType\nFLOWSERVICE\n/Type\n\n      \nValue\ntrue\n/Value\n\n    \n/Test\n\n  \n/Report\n\n\n/results\n\n.....\n\nsensors\n\n  \nsensor scope=\npackage\n\n    \ndefinition sensorName=\ntotals\n sensorClass=\ncom.softwareag.gcs.wm.codereview.sensors.TotalsSensor\n\n      \ndecorator name=\nFlowTotals\n class=\ncom.softwareag.gcs.wm.codereview.decorators.SummaryTotals\n/\n\n    \n/definition\n\n    \nresults name=\nFlow Services\n value=\n6\n/\n\n    \nresults name=\nJava Services\n value=\n0\n/\n\n    \nresults name=\nDocuments\n value=\n2\n/\n\n    \nresults name=\nSchemas\n value=\n0\n/\n\n    \nresults name=\nFF Dictionaries\n value=\n0\n/\n\n    \nresults name=\nFF Schemas\n value=\n0\n/\n\n    \nresults name=\nBlaze\n value=\n0\n/\n\n...\n\n\n\n\nJUnit Report\n\n\nThis produces an XML Report constructed in JUnit format in order to be able to publish results to a CI Server", 
            "title": "Reports"
        }, 
        {
            "location": "/User Guide/Reports/index.html#reports", 
            "text": "", 
            "title": "Reports"
        }, 
        {
            "location": "/User Guide/Reports/index.html#html-report", 
            "text": "The generated HTML report contains the full detail of each review item, as well as an overall summary.  e.g.", 
            "title": "HTML Report"
        }, 
        {
            "location": "/User Guide/Reports/index.html#csv-report", 
            "text": "The CVS report contains the raw data generated from the review presented in CSV format, .e.g  ID  NAME       SERVICE                                         CHECKID  TEST_PASSED  VALUE  IGNORE_FAILURE  RAGSTATUS\n1   Stateless  com.softwareag.core.monitor.impl:criticalAction SP1.1    TRUE         yes    FALSE           1\n1   Stateless  com.softwareag.core.monitor.impl:getSettings    SP1.2    TRUE         yes    FALSE           1\n1   Stateless  com.softwareag.core.monitor.impl:invokeQuiesce  SP1.3    TRUE         yes    FALSE           1", 
            "title": "CSV Report"
        }, 
        {
            "location": "/User Guide/Reports/index.html#xml-report", 
            "text": "Contains the raw xml, useful if you want to build your own custom HTML repor  An excerpt of an example report is below:  ..... results \n   Summary \n     total 6 /total \n     pass 6 /pass \n     fail 0 /fail \n     warn 0 /warn \n     ragStatus 1 /ragStatus \n     executeTime 112 /executeTime \n   /Summary \n   Report \n     Test passed= true  check-id= SP2.1  ragStatus= 1  executeTime= 15 \n       Service com.softwareag.testsystem.impl:allowedLocations /Service \n       Type FLOWSERVICE /Type \n       Value true /Value \n     /Test \n     Test passed= true  check-id= SP2.2  ragStatus= 1  executeTime= 51 \n       Service com.softwareag.testsystem.impl:callYahoo /Service \n       Type FLOWSERVICE /Type \n       Value true /Value \n     /Test \n     Test passed= true  check-id= SP2.3  ragStatus= 1  executeTime= 9 \n       Service com.softwareag.testsystem.pub:isAllowedLocation /Service \n       Type FLOWSERVICE /Type \n       Value true /Value \n     /Test \n     Test passed= true  check-id= SP2.4  ragStatus= 1  executeTime= 7 \n       Service com.softwareag.testsystem.pub.isitsunny:_get /Service \n       Type FLOWSERVICE /Type \n       Value true /Value \n     /Test \n     Test passed= true  check-id= SP2.5  ragStatus= 1  executeTime= 8 \n       Service com.softwareag.testsystem.pub:isLocationSupported /Service \n       Type FLOWSERVICE /Type \n       Value true /Value \n     /Test \n     Test passed= true  check-id= SP2.6  ragStatus= 1  executeTime= 6 \n       Service com.softwareag.testsystem.pub.weather:isItSunny /Service \n       Type FLOWSERVICE /Type \n       Value true /Value \n     /Test \n   /Report  /results \n..... sensors \n   sensor scope= package \n     definition sensorName= totals  sensorClass= com.softwareag.gcs.wm.codereview.sensors.TotalsSensor \n       decorator name= FlowTotals  class= com.softwareag.gcs.wm.codereview.decorators.SummaryTotals / \n     /definition \n     results name= Flow Services  value= 6 / \n     results name= Java Services  value= 0 / \n     results name= Documents  value= 2 / \n     results name= Schemas  value= 0 / \n     results name= FF Dictionaries  value= 0 / \n     results name= FF Schemas  value= 0 / \n     results name= Blaze  value= 0 / \n...", 
            "title": "XML Report"
        }, 
        {
            "location": "/User Guide/Reports/index.html#junit-report", 
            "text": "This produces an XML Report constructed in JUnit format in order to be able to publish results to a CI Server", 
            "title": "JUnit Report"
        }
    ]
}